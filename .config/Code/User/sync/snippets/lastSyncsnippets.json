{"ref":"b9385855-2581-4bc6-b295-4e4635030a87","syncData":{"version":1,"machineId":"492a9ed9-691d-4d36-aed9-3e5c2bad434d","content":"{\"javascript.json\":\"{\\n  \\\"setImmediate\\\": {\\n    \\\"prefix\\\": \\\"sim\\\",\\n    \\\"body\\\": \\\"setImmediate(() => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"await\\\": {\\n    \\\"prefix\\\": \\\"a\\\",\\n    \\\"body\\\": \\\"await ${0}\\\"\\n  },\\n  \\\"await Promise.all\\\": {\\n    \\\"prefix\\\": \\\"apa\\\",\\n    \\\"body\\\": \\\"await Promise.all(${1:value})\\\"\\n  },\\n  \\\"await Promise.all with destructuring\\\": {\\n    \\\"prefix\\\": \\\"apad\\\",\\n    \\\"body\\\": \\\"const [${0}] = await Promise.all(${1:value})\\\"\\n  },\\n  \\\"await Promise.all map\\\": {\\n    \\\"prefix\\\": \\\"apm\\\",\\n    \\\"body\\\": \\\"await Promise.all(${1:array}.map(async (${2:value}) => {\\\\n\\\\t${0}\\\\n}))\\\"\\n  },\\n  \\\"await sleep\\\": {\\n    \\\"prefix\\\": \\\"ast\\\",\\n    \\\"body\\\": \\\"await new Promise((r) => setTimeout(r, ${0}))\\\"\\n  },\\n  \\\"Node callback\\\": {\\n    \\\"prefix\\\": \\\"cb\\\",\\n    \\\"body\\\": \\\"function (err, ${1:value}) {\\\\n\\\\tif (err) throw err\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"process.env\\\": {\\n    \\\"prefix\\\": \\\"pe\\\",\\n    \\\"body\\\": \\\"process.env\\\"\\n  },\\n  \\\"Promise.all\\\": {\\n    \\\"prefix\\\": \\\"pa\\\",\\n    \\\"body\\\": \\\"Promise.all(${1:value})\\\"\\n  },\\n  \\\"Promise.resolve\\\": {\\n    \\\"prefix\\\": \\\"prs\\\",\\n    \\\"body\\\": \\\"Promise.resolve(${1:value})\\\"\\n  },\\n  \\\"Promise.reject\\\": {\\n    \\\"prefix\\\": \\\"prj\\\",\\n    \\\"body\\\": \\\"Promise.reject(${1:value})\\\"\\n  },\\n  \\\"Promise\\\": {\\n    \\\"prefix\\\": \\\"p\\\",\\n    \\\"body\\\": \\\"Promise\\\"\\n  },\\n  \\\"new Promise\\\": {\\n    \\\"prefix\\\": \\\"np\\\",\\n    \\\"body\\\": \\\"new Promise((resolve, reject) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"Promise.then\\\": {\\n    \\\"prefix\\\": \\\"pt\\\",\\n    \\\"body\\\": \\\"${1:promise}.then((${2:value}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"Promise.catch\\\": {\\n    \\\"prefix\\\": \\\"pc\\\",\\n    \\\"body\\\": \\\"${1:promise}.catch(error => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"describe\\\": {\\n    \\\"prefix\\\": \\\"desc\\\",\\n    \\\"body\\\": \\\"describe('${1:description}', () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"describe top level\\\": {\\n    \\\"prefix\\\": \\\"dt\\\",\\n    \\\"body\\\": \\\"describe('${TM_FILENAME_BASE}', () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"it asynchronous\\\": {\\n    \\\"prefix\\\": \\\"it\\\",\\n    \\\"body\\\": \\\"it('${1:description}', async () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"it.todo\\\": {\\n    \\\"prefix\\\": \\\"itt\\\",\\n    \\\"body\\\": \\\"it.todo('${1:description}')\\\"\\n  },\\n  \\\"it with a callback\\\": {\\n    \\\"prefix\\\": \\\"itd\\\",\\n    \\\"body\\\": \\\"it('${1:description}', (done) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"it synchronous\\\": {\\n    \\\"prefix\\\": \\\"its\\\",\\n    \\\"body\\\": \\\"it('${1:description}', () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"before\\\": {\\n    \\\"prefix\\\": \\\"bf\\\",\\n    \\\"body\\\": \\\"before(async () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"beforeAll\\\": {\\n    \\\"prefix\\\": \\\"ba\\\",\\n    \\\"body\\\": \\\"beforeAll(async () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"beforeEach\\\": {\\n    \\\"prefix\\\": \\\"bfe\\\",\\n    \\\"body\\\": \\\"beforeEach(async () => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"after\\\": {\\n    \\\"prefix\\\": \\\"aft\\\",\\n    \\\"body\\\": \\\"after(() => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"afterEach\\\": {\\n    \\\"prefix\\\": \\\"afe\\\",\\n    \\\"body\\\": \\\"afterEach(() => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"require\\\": {\\n    \\\"prefix\\\": \\\"rq\\\",\\n    \\\"body\\\": \\\"require('${1:module}')\\\"\\n  },\\n  \\\"const module = require('module')\\\": {\\n    \\\"prefix\\\": \\\"cr\\\",\\n    \\\"body\\\": \\\"const ${1:module} = require('${1:module}')\\\"\\n  },\\n  \\\"exports.member\\\": {\\n    \\\"prefix\\\": \\\"em\\\",\\n    \\\"body\\\": \\\"exports.${1:member} = ${2:value}\\\"\\n  },\\n  \\\"module.exports\\\": {\\n    \\\"prefix\\\": \\\"me\\\",\\n    \\\"body\\\": \\\"module.exports = ${1:name}\\\"\\n  },\\n  \\\"module as class\\\": {\\n    \\\"prefix\\\": \\\"mec\\\",\\n    \\\"body\\\": \\\"class ${1:name} {\\\\n\\\\tconstructor (${2:arguments}) {\\\\n\\\\t\\\\t${0}\\\\n\\\\t}\\\\n}\\\\n\\\\nmodule.exports = ${1:name}\\\\n\\\"\\n  },\\n  \\\"event handler\\\": {\\n    \\\"prefix\\\": \\\"on\\\",\\n    \\\"body\\\": \\\"${1:emitter}.on('${2:event}', (${3:arguments}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"dom event cancel default and propagation\\\": {\\n    \\\"prefix\\\": \\\"evc\\\",\\n    \\\"body\\\": \\\"ev.preventDefault()\\\\nev.stopPropagation()\\\\nreturn false\\\"\\n  },\\n  \\\"addEventListener\\\": {\\n    \\\"prefix\\\": \\\"ae\\\",\\n    \\\"body\\\": \\\"${1:document}.addEventListener('${2:event}', ${3:ev} => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"removeEventListener\\\": {\\n    \\\"prefix\\\": \\\"rel\\\",\\n    \\\"body\\\": \\\"${1:document}.removeEventListener('${2:event}', ${3:listener})\\\"\\n  },\\n  \\\"getElementById\\\": {\\n    \\\"prefix\\\": \\\"gi\\\",\\n    \\\"body\\\": \\\"${1:document}.getElementById('${2:id}')\\\"\\n  },\\n  \\\"getElementsByClassName\\\": {\\n    \\\"prefix\\\": \\\"gc\\\",\\n    \\\"body\\\": \\\"Array.from(${1:document}.getElementsByClassName('${2:class}'))\\\"\\n  },\\n  \\\"getElementsByTagName\\\": {\\n    \\\"prefix\\\": \\\"gt\\\",\\n    \\\"body\\\": \\\"Array.from(${1:document}.getElementsByTagName('${2:tag}'))\\\"\\n  },\\n  \\\"querySelector\\\": {\\n    \\\"prefix\\\": \\\"qs\\\",\\n    \\\"body\\\": \\\"${1:document}.querySelector('${2:selector}')\\\"\\n  },\\n  \\\"querySelectorAll\\\": {\\n    \\\"prefix\\\": \\\"qsa\\\",\\n    \\\"body\\\": \\\"Array.from(${1:document}.querySelectorAll('${2:selector}'))\\\"\\n  },\\n  \\\"createDocumentFragment\\\": {\\n    \\\"prefix\\\": \\\"cdf\\\",\\n    \\\"body\\\": \\\"${1:document}.createDocumentFragment(${2:elem})\\\"\\n  },\\n  \\\"createElement\\\": {\\n    \\\"prefix\\\": \\\"cel\\\",\\n    \\\"body\\\": \\\"${1:document}.createElement(${2:elem})\\\"\\n  },\\n  \\\"classList.add\\\": {\\n    \\\"prefix\\\": \\\"hecla\\\",\\n    \\\"body\\\": \\\"${1:el}.classList.add('${2:class}')\\\"\\n  },\\n  \\\"classList.remove\\\": {\\n    \\\"prefix\\\": \\\"heclr\\\",\\n    \\\"body\\\": \\\"${1:el}.classList.remove('${2:class}')\\\"\\n  },\\n  \\\"classList.toggle\\\": {\\n    \\\"prefix\\\": \\\"hect\\\",\\n    \\\"body\\\": \\\"${1:el}.classList.toggle('${2:class}')\\\"\\n  },\\n  \\\"getAttribute\\\": {\\n    \\\"prefix\\\": \\\"hega\\\",\\n    \\\"body\\\": \\\"${1:el}.getAttribute('${2:attr}')\\\"\\n  },\\n  \\\"removeAttribute\\\": {\\n    \\\"prefix\\\": \\\"hera\\\",\\n    \\\"body\\\": \\\"${1:el}.removeAttribute('${2:attr}')\\\"\\n  },\\n  \\\"setAttribute\\\": {\\n    \\\"prefix\\\": \\\"hesa\\\",\\n    \\\"body\\\": \\\"${1:el}.setAttribute('${2:attr}', ${3:value})\\\"\\n  },\\n  \\\"appendChild\\\": {\\n    \\\"prefix\\\": \\\"heac\\\",\\n    \\\"body\\\": \\\"${1:el}.appendChild(${2:elem})\\\"\\n  },\\n  \\\"removeChild\\\": {\\n    \\\"prefix\\\": \\\"herc\\\",\\n    \\\"body\\\": \\\"${1:el}.removeChild(${2:elem})\\\"\\n  },\\n  \\\"forEach loop\\\": {\\n    \\\"prefix\\\": \\\"fe\\\",\\n    \\\"body\\\": \\\"${1:iterable}.forEach((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"map\\\": {\\n    \\\"prefix\\\": \\\"map\\\",\\n    \\\"body\\\": \\\"${1:iterable}.map((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"reduce\\\": {\\n    \\\"prefix\\\": \\\"reduce\\\",\\n    \\\"body\\\": \\\"${1:iterable}.reduce((${2:previous}, ${3:current}) => {\\\\n\\\\t${0}\\\\n}${4:, initial})\\\"\\n  },\\n  \\\"filter\\\": {\\n    \\\"prefix\\\": \\\"filter\\\",\\n    \\\"body\\\": \\\"${1:iterable}.filter((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"find\\\": {\\n    \\\"prefix\\\": \\\"find\\\",\\n    \\\"body\\\": \\\"${1:iterable}.find((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"every\\\": {\\n    \\\"prefix\\\": \\\"every\\\",\\n    \\\"body\\\": \\\"${1:iterable}.every((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"some\\\": {\\n    \\\"prefix\\\": \\\"some\\\",\\n    \\\"body\\\": \\\"${1:iterable}.some((${2:item}) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"var statement\\\": {\\n    \\\"prefix\\\": \\\"v\\\",\\n    \\\"body\\\": \\\"var ${1:name}\\\"\\n  },\\n  \\\"var assignment\\\": {\\n    \\\"prefix\\\": \\\"va\\\",\\n    \\\"body\\\": \\\"var ${1:name} = ${2:value}\\\"\\n  },\\n  \\\"let statement\\\": {\\n    \\\"prefix\\\": \\\"l\\\",\\n    \\\"body\\\": \\\"let ${1:name}\\\"\\n  },\\n  \\\"const statement\\\": {\\n    \\\"prefix\\\": \\\"c\\\",\\n    \\\"body\\\": \\\"const ${1:name}\\\"\\n  },\\n  \\\"const statement from destructuring\\\": {\\n    \\\"prefix\\\": \\\"cd\\\",\\n    \\\"body\\\": \\\"const { ${2:prop} } = ${1:value}\\\"\\n  },\\n  \\\"const statement from array destructuring\\\": {\\n    \\\"prefix\\\": \\\"cad\\\",\\n    \\\"body\\\": \\\"const [ ${2:prop} ] = ${1:value}\\\"\\n  },\\n  \\\"const assignment awaited\\\": {\\n    \\\"prefix\\\": \\\"ca\\\",\\n    \\\"body\\\": \\\"const ${1:name} = await ${2:value}\\\"\\n  },\\n  \\\"const destructuring assignment awaited\\\": {\\n    \\\"prefix\\\": \\\"cda\\\",\\n    \\\"body\\\": \\\"const { ${1:name} } = await ${2:value}\\\"\\n  },\\n  \\\"const arrow function assignment\\\": {\\n    \\\"prefix\\\": \\\"cf\\\",\\n    \\\"body\\\": \\\"const ${1:name} = (${2:arguments}) => {\\\\n\\\\treturn ${0}\\\\n}\\\"\\n  },\\n  \\\"let assignment awaited\\\": {\\n    \\\"prefix\\\": \\\"la\\\",\\n    \\\"body\\\": \\\"let ${1:name} = await ${2:value}\\\"\\n  },\\n  \\\"const assignment yielded\\\": {\\n    \\\"prefix\\\": \\\"cy\\\",\\n    \\\"body\\\": \\\"const ${1:name} = yield ${2:value}\\\"\\n  },\\n  \\\"let assignment yielded\\\": {\\n    \\\"prefix\\\": \\\"ly\\\",\\n    \\\"body\\\": \\\"let ${1:name} = yield ${2:value}\\\"\\n  },\\n  \\\"const object\\\": {\\n    \\\"prefix\\\": \\\"co\\\",\\n    \\\"body\\\": \\\"const ${1:name} = {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"const array\\\": {\\n    \\\"prefix\\\": \\\"car\\\",\\n    \\\"body\\\": \\\"const ${1:name} = [\\\\n\\\\t${0}\\\\n]\\\"\\n  },\\n  \\\"generate array of integers starting with 1\\\": {\\n    \\\"prefix\\\": \\\"gari\\\",\\n    \\\"body\\\": \\\"Array.from({ length: ${1:length} }, (v, k) => k + 1)\\\"\\n  },\\n  \\\"generate array of integers starting with 0\\\": {\\n    \\\"prefix\\\": \\\"gari0\\\",\\n    \\\"body\\\": \\\"[...Array(${1:length}).keys()]\\\"\\n  },\\n  \\\"class\\\": {\\n    \\\"prefix\\\": \\\"cs\\\",\\n    \\\"body\\\": \\\"class ${1:name} {\\\\n\\\\tconstructor (${2:arguments}) {\\\\n\\\\t\\\\t${0}\\\\n\\\\t}\\\\n}\\\"\\n  },\\n  \\\"class extends\\\": {\\n    \\\"prefix\\\": \\\"csx\\\",\\n    \\\"body\\\": \\\"class ${1:name} extends ${2:base} {\\\\n\\\\tconstructor (${3:arguments}) {\\\\n\\\\t\\\\tsuper(${3:arguments})\\\\n\\\\t\\\\t${0}\\\\n\\\\t}\\\\n}\\\"\\n  },\\n  \\\"module export\\\": {\\n    \\\"prefix\\\": \\\"e\\\",\\n    \\\"body\\\": \\\"export ${1:member}\\\"\\n  },\\n  \\\"module export const\\\": {\\n    \\\"prefix\\\": \\\"ec\\\",\\n    \\\"body\\\": \\\"export const ${1:member} = ${2:value}\\\"\\n  },\\n  \\\"export named function\\\": {\\n    \\\"prefix\\\": \\\"ef\\\",\\n    \\\"body\\\": \\\"export function ${1:member} (${2:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"module default export\\\": {\\n    \\\"prefix\\\": \\\"ed\\\",\\n    \\\"body\\\": \\\"export default ${1:member}\\\"\\n  },\\n  \\\"module default export function\\\": {\\n    \\\"prefix\\\": \\\"edf\\\",\\n    \\\"body\\\": \\\"export default function ${1:name} (${2:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"import module\\\": {\\n    \\\"prefix\\\": \\\"im\\\",\\n    \\\"body\\\": \\\"import ${2:*} from '${1:module}'\\\"\\n  },\\n  \\\"import module as\\\": {\\n    \\\"prefix\\\": \\\"ia\\\",\\n    \\\"body\\\": \\\"import ${2:*} as ${3:name} from '${1:module}'\\\"\\n  },\\n  \\\"import module destructured\\\": {\\n    \\\"prefix\\\": \\\"id\\\",\\n    \\\"body\\\": \\\"import {$2} from '${1:module}'\\\"\\n  },\\n  \\\"typeof\\\": {\\n    \\\"prefix\\\": \\\"to\\\",\\n    \\\"body\\\": \\\"typeof ${1:source} === '${2:undefined}'\\\"\\n  },\\n  \\\"this\\\": {\\n    \\\"prefix\\\": \\\"t\\\",\\n    \\\"body\\\": \\\"this.\\\"\\n  },\\n  \\\"instanceof\\\": {\\n    \\\"prefix\\\": \\\"iof\\\",\\n    \\\"body\\\": \\\"${1:source} instanceof ${2:Object}\\\"\\n  },\\n  \\\"let and if statement\\\": {\\n    \\\"prefix\\\": \\\"lif\\\",\\n    \\\"body\\\": \\\"let ${0} \\\\n if (${2:condition}) {\\\\n\\\\t${1}\\\\n}\\\"\\n  },\\n  \\\"else statement\\\": {\\n    \\\"prefix\\\": \\\"el\\\",\\n    \\\"body\\\": \\\"else {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"else if statement\\\": {\\n    \\\"prefix\\\": \\\"ei\\\",\\n    \\\"body\\\": \\\"else if (${1:condition}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"while iteration decrementing\\\": {\\n    \\\"prefix\\\": \\\"wid\\\",\\n    \\\"body\\\": \\\"let ${1:array}Index = ${1:array}.length\\\\nwhile (${1:array}Index--) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"throw new Error\\\": {\\n    \\\"prefix\\\": \\\"tn\\\",\\n    \\\"body\\\": \\\"throw new ${0:error}\\\"\\n  },\\n  \\\"try/catch\\\": {\\n    \\\"prefix\\\": \\\"tc\\\",\\n    \\\"body\\\": \\\"try {\\\\n\\\\t${0}\\\\n} catch (${1:err}) {\\\\n\\\\t\\\\n}\\\"\\n  },\\n  \\\"try/finally\\\": {\\n    \\\"prefix\\\": \\\"tf\\\",\\n    \\\"body\\\": \\\"try {\\\\n\\\\t${0}\\\\n} finally {\\\\n\\\\t\\\\n}\\\"\\n  },\\n  \\\"try/catch/finally\\\": {\\n    \\\"prefix\\\": \\\"tcf\\\",\\n    \\\"body\\\": \\\"try {\\\\n\\\\t${0}\\\\n} catch (${1:err}) {\\\\n\\\\t\\\\n} finally {\\\\n\\\\t\\\\n}\\\"\\n  },\\n  \\\"anonymous function\\\": {\\n    \\\"prefix\\\": \\\"fan\\\",\\n    \\\"body\\\": \\\"function (${1:arguments}) {${0}}\\\"\\n  },\\n  \\\"named function\\\": {\\n    \\\"prefix\\\": \\\"fn\\\",\\n    \\\"body\\\": \\\"function ${1:name} (${2:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"async function\\\": {\\n    \\\"prefix\\\": \\\"asf\\\",\\n    \\\"body\\\": \\\"async function (${1:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"async arrow function\\\": {\\n    \\\"prefix\\\": \\\"aa\\\",\\n    \\\"body\\\": \\\"async (${1:arguments}) => {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"immediately-invoked function expression\\\": {\\n    \\\"prefix\\\": \\\"iife\\\",\\n    \\\"body\\\": \\\";(function (${1:arguments}) {\\\\n\\\\t${0}\\\\n})(${2})\\\"\\n  },\\n  \\\"async immediately-invoked function expression\\\": {\\n    \\\"prefix\\\": \\\"aiife\\\",\\n    \\\"body\\\": \\\";(async (${1:arguments}) => {\\\\n\\\\t${0}\\\\n})(${2})\\\"\\n  },\\n  \\\"arrow function\\\": {\\n    \\\"prefix\\\": \\\"af\\\",\\n    \\\"body\\\": \\\"(${1:arguments}) => ${2:statement}\\\"\\n  },\\n  \\\"arrow function with destructuring\\\": {\\n    \\\"prefix\\\": \\\"fd\\\",\\n    \\\"body\\\": \\\"({${1:arguments}}) => ${2:statement}\\\"\\n  },\\n  \\\"arrow function with destructuring returning destructured\\\": {\\n    \\\"prefix\\\": \\\"fdr\\\",\\n    \\\"body\\\": \\\"({${1:arguments}}) => ${1:arguments}\\\"\\n  },\\n  \\\"arrow function with body\\\": {\\n    \\\"prefix\\\": \\\"f\\\",\\n    \\\"body\\\": \\\"(${1:arguments}) => {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"arrow function with return\\\": {\\n    \\\"prefix\\\": \\\"fr\\\",\\n    \\\"body\\\": \\\"(${1:arguments}) => {\\\\n\\\\treturn ${0}\\\\n}\\\"\\n  },\\n  \\\"generator function\\\": {\\n    \\\"prefix\\\": \\\"gf\\\",\\n    \\\"body\\\": \\\"function* (${1:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"named generator\\\": {\\n    \\\"prefix\\\": \\\"gfn\\\",\\n    \\\"body\\\": \\\"function* ${1:name}(${2:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"console.log\\\": {\\n    \\\"prefix\\\": \\\"cl\\\",\\n    \\\"body\\\": \\\"console.log(${0})\\\"\\n  },\\n  \\\"console.log a variable\\\": {\\n    \\\"prefix\\\": \\\"cv\\\",\\n    \\\"body\\\": \\\"console.log('${1}:', ${1})\\\"\\n  },\\n  \\\"console.error\\\": {\\n    \\\"prefix\\\": \\\"ce\\\",\\n    \\\"body\\\": \\\"console.error(${0})\\\"\\n  },\\n  \\\"console.warn\\\": {\\n    \\\"prefix\\\": \\\"cw\\\",\\n    \\\"body\\\": \\\"console.warn(${0})\\\"\\n  },\\n  \\\"console.dir\\\": {\\n    \\\"prefix\\\": \\\"cod\\\",\\n    \\\"body\\\": \\\"console.dir('${1}:', ${1})\\\"\\n  },\\n  \\\"constructor\\\": {\\n    \\\"prefix\\\": \\\"cn\\\",\\n    \\\"body\\\": \\\"constructor () {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"use strict\\\": {\\n    \\\"prefix\\\": \\\"uss\\\",\\n    \\\"body\\\": \\\"'use strict'\\\"\\n  },\\n  \\\"JSON.stringify()\\\": {\\n    \\\"prefix\\\": \\\"js\\\",\\n    \\\"body\\\": \\\"JSON.stringify($0)\\\"\\n  },\\n  \\\"JSON.parse()\\\": {\\n    \\\"prefix\\\": \\\"jp\\\",\\n    \\\"body\\\": \\\"JSON.parse($0)\\\"\\n  },\\n  \\\"method\\\": {\\n    \\\"prefix\\\": \\\"m\\\",\\n    \\\"body\\\": \\\"${1:method} (${2:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"getter\\\": {\\n    \\\"prefix\\\": \\\"get\\\",\\n    \\\"body\\\": \\\"get ${1:property} () {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"setter\\\": {\\n    \\\"prefix\\\": \\\"set\\\",\\n    \\\"body\\\": \\\"set ${1:property} (${2:value}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"getter + setter\\\": {\\n    \\\"prefix\\\": \\\"gs\\\",\\n    \\\"body\\\": \\\"get ${1:property} () {\\\\n\\\\t${0}\\\\n}\\\\nset ${1:property} (${2:value}) {\\\\n\\\\t\\\\n}\\\"\\n  },\\n  \\\"prototype method\\\": {\\n    \\\"prefix\\\": \\\"proto\\\",\\n    \\\"body\\\": \\\"${1:Class}.prototype.${2:method} = function (${3:arguments}) {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"Object.assign\\\": {\\n    \\\"prefix\\\": \\\"oa\\\",\\n    \\\"body\\\": \\\"Object.assign(${1:dest}, ${2:source})\\\"\\n  },\\n  \\\"Object.create\\\": {\\n    \\\"prefix\\\": \\\"oc\\\",\\n    \\\"body\\\": \\\"Object.create(${1:obj})\\\"\\n  },\\n  \\\"Object.getOwnPropertyDescriptor\\\": {\\n    \\\"prefix\\\": \\\"og\\\",\\n    \\\"body\\\": \\\"Object.getOwnPropertyDescriptor(${1:obj}, '${2:prop}')\\\"\\n  },\\n  \\\"ternary\\\": {\\n    \\\"prefix\\\": \\\"te\\\",\\n    \\\"body\\\": \\\"${1:cond} ? ${2:true} : ${3:false}\\\"\\n  },\\n  \\\"ternary assignment\\\": {\\n    \\\"prefix\\\": \\\"ta\\\",\\n    \\\"body\\\": \\\"const ${0} = ${1:cond} ? ${2:true} : ${3:false}\\\"\\n  },\\n  \\\"Object.defineProperty\\\": {\\n    \\\"prefix\\\": \\\"od\\\",\\n    \\\"body\\\": \\\"Object.defineProperty(${1:dest}, '${2:prop}', {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"Object.keys\\\": {\\n    \\\"prefix\\\": \\\"ok\\\",\\n    \\\"body\\\": \\\"Object.keys(${1:obj})\\\"\\n  },\\n  \\\"Object.values\\\": {\\n    \\\"prefix\\\": \\\"ov\\\",\\n    \\\"body\\\": \\\"Object.values(${1:obj})\\\"\\n  },\\n  \\\"Object.entries\\\": {\\n    \\\"prefix\\\": \\\"oe\\\",\\n    \\\"body\\\": \\\"Object.entries(${1:obj})\\\"\\n  },\\n  \\\"return\\\": {\\n    \\\"prefix\\\": \\\"r\\\",\\n    \\\"body\\\": \\\"return ${0}\\\"\\n  },\\n  \\\"return arrow function\\\": {\\n    \\\"prefix\\\": \\\"rf\\\",\\n    \\\"body\\\": \\\"return (${1:arguments}) => ${2:statement}\\\"\\n  },\\n  \\\"yield\\\": {\\n    \\\"prefix\\\": \\\"y\\\",\\n    \\\"body\\\": \\\"yield ${0}\\\"\\n  },\\n  \\\"return this\\\": {\\n    \\\"prefix\\\": \\\"rt\\\",\\n    \\\"body\\\": \\\"return ${0:this}\\\"\\n  },\\n  \\\"return null\\\": {\\n    \\\"prefix\\\": \\\"rn\\\",\\n    \\\"body\\\": \\\"return null\\\"\\n  },\\n  \\\"return new object\\\": {\\n    \\\"prefix\\\": \\\"ro\\\",\\n    \\\"body\\\": \\\"return {\\\\n\\\\t${0}\\\\n}\\\"\\n  },\\n  \\\"return new array\\\": {\\n    \\\"prefix\\\": \\\"ra\\\",\\n    \\\"body\\\": \\\"return [\\\\n\\\\t${0}\\\\n]\\\"\\n  },\\n  \\\"return promise\\\": {\\n    \\\"prefix\\\": \\\"rp\\\",\\n    \\\"body\\\": \\\"return new Promise((resolve, reject) => {\\\\n\\\\t${0}\\\\n})\\\"\\n  },\\n  \\\"wrap selection in arrow function\\\": {\\n    \\\"prefix\\\": \\\"wrap selection in arrow function\\\",\\n    \\\"body\\\": \\\"() => {\\\\n\\\\t{$TM_SELECTED_TEXT}\\\\n}\\\",\\n    \\\"description\\\": \\\"wraps text in arrow function\\\"\\n  },\\n  \\\"wrap selection in async arrow function\\\": {\\n    \\\"prefix\\\": \\\"wrap selection in async arrow function\\\",\\n    \\\"body\\\": \\\"async () => {\\\\n\\\\t{$TM_SELECTED_TEXT}\\\\n}\\\",\\n    \\\"description\\\": \\\"wraps text in arrow function\\\"\\n  },\\n  \\\"define module\\\": {\\n    \\\"prefix\\\": \\\"define\\\",\\n    \\\"body\\\": [\\n      \\\"define([\\\",\\n      \\\"\\\\t'require',\\\",\\n      \\\"\\\\t'${1:dependency}'\\\",\\n      \\\"], function(require, ${2:factory}) {\\\",\\n      \\\"\\\\t'use strict';\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"});\\\"\\n    ],\\n    \\\"description\\\": \\\"define module\\\"\\n  },\\n  \\\"For Loop\\\": {\\n    \\\"prefix\\\": \\\"for\\\",\\n    \\\"body\\\": [\\n      \\\"for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {\\\",\\n      \\\"\\\\tconst ${3:element} = ${2:array}[${1:index}];\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"For Loop\\\"\\n  },\\n  \\\"For-Each Loop\\\": {\\n    \\\"prefix\\\": \\\"foreach\\\",\\n    \\\"body\\\": [\\\"${1:array}.forEach(${2:element} => {\\\", \\\"\\\\t$0\\\", \\\"});\\\"],\\n    \\\"description\\\": \\\"For-Each Loop\\\"\\n  },\\n  \\\"For-In Loop\\\": {\\n    \\\"prefix\\\": \\\"forin\\\",\\n    \\\"body\\\": [\\n      \\\"for (const ${1:key} in ${2:object}) {\\\",\\n      \\\"\\\\tif (${2:object}.hasOwnProperty(${1:key})) {\\\",\\n      \\\"\\\\t\\\\tconst ${3:element} = ${2:object}[${1:key}];\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t}\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"For-In Loop\\\"\\n  },\\n  \\\"For-Of Loop\\\": {\\n    \\\"prefix\\\": \\\"forof\\\",\\n    \\\"body\\\": [\\\"for (const ${1:iterator} of ${2:object}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"For-Of Loop\\\"\\n  },\\n  \\\"For-Await-Of Loop\\\": {\\n    \\\"prefix\\\": \\\"forawaitof\\\",\\n    \\\"body\\\": [\\\"for await (const ${1:iterator} of ${2:object}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"For-Await-Of Loop\\\"\\n  },\\n  \\\"Function Statement\\\": {\\n    \\\"prefix\\\": \\\"function\\\",\\n    \\\"body\\\": [\\\"function ${1:name}(${2:params}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Function Statement\\\"\\n  },\\n  \\\"If Statement\\\": {\\n    \\\"prefix\\\": \\\"if\\\",\\n    \\\"body\\\": [\\\"if (${1:condition}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"If Statement\\\"\\n  },\\n  \\\"If-Else Statement\\\": {\\n    \\\"prefix\\\": \\\"ifelse\\\",\\n    \\\"body\\\": [\\\"if (${1:condition}) {\\\", \\\"\\\\t$0\\\", \\\"} else {\\\", \\\"\\\\t\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"If-Else Statement\\\"\\n  },\\n  \\\"New Statement\\\": {\\n    \\\"prefix\\\": \\\"new\\\",\\n    \\\"body\\\": [\\\"const ${1:name} = new ${2:type}(${3:arguments});$0\\\"],\\n    \\\"description\\\": \\\"New Statement\\\"\\n  },\\n  \\\"Switch Statement\\\": {\\n    \\\"prefix\\\": \\\"switch\\\",\\n    \\\"body\\\": [\\n      \\\"switch (${1:key}) {\\\",\\n      \\\"\\\\tcase ${2:value}:\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t\\\\tbreak;\\\",\\n      \\\"\\\",\\n      \\\"\\\\tdefault:\\\",\\n      \\\"\\\\t\\\\tbreak;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Switch Statement\\\"\\n  },\\n  \\\"While Statement\\\": {\\n    \\\"prefix\\\": \\\"while\\\",\\n    \\\"body\\\": [\\\"while (${1:condition})\\\\n{\\\", \\\"\\\\t$0\\\", \\\"\\\\n}\\\"],\\n    \\\"description\\\": \\\"While Statement\\\"\\n  },\\n  \\\"Do-While Statement\\\": {\\n    \\\"prefix\\\": \\\"dowhile\\\",\\n    \\\"body\\\": [\\\"do\\\\n{\\\", \\\"\\\\t$0\\\", \\\"\\\\n} while (${1:condition});\\\"],\\n    \\\"description\\\": \\\"Do-While Statement\\\"\\n  },\\n  \\\"Try-Catch Statement\\\": {\\n    \\\"prefix\\\": \\\"trycatch\\\",\\n    \\\"body\\\": [\\\"try {\\\", \\\"\\\\t$0\\\", \\\"} catch (${1:error}) {\\\", \\\"\\\\t\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Try-Catch Statement\\\"\\n  },\\n  \\\"Set Timeout Function\\\": {\\n    \\\"prefix\\\": \\\"settimeout\\\",\\n    \\\"body\\\": [\\\"setTimeout(() => {\\\", \\\"\\\\t$0\\\", \\\"}, ${1:timeout});\\\"],\\n    \\\"description\\\": \\\"Set Timeout Function\\\"\\n  },\\n  \\\"Set Interval Function\\\": {\\n    \\\"prefix\\\": \\\"setinterval\\\",\\n    \\\"body\\\": [\\\"setInterval(() => {\\\", \\\"\\\\t$0\\\", \\\"}, ${1:interval});\\\"],\\n    \\\"description\\\": \\\"Set Interval Function\\\"\\n  },\\n  \\\"Import external module.\\\": {\\n    \\\"prefix\\\": \\\"import statement\\\",\\n    \\\"body\\\": [\\\"import { $0 } from \\\\\\\"${1:module}\\\\\\\";\\\"],\\n    \\\"description\\\": \\\"Import external module.\\\"\\n  },\\n  \\\"Region Start\\\": {\\n    \\\"prefix\\\": \\\"#region\\\",\\n    \\\"body\\\": [\\\"//#region $0\\\"],\\n    \\\"description\\\": \\\"Folding Region Start\\\"\\n  },\\n  \\\"Region End\\\": {\\n    \\\"prefix\\\": \\\"#endregion\\\",\\n    \\\"body\\\": [\\\"//#endregion\\\"],\\n    \\\"description\\\": \\\"Folding Region End\\\"\\n  },\\n  \\\"Log warning to console\\\": {\\n    \\\"prefix\\\": \\\"warn\\\",\\n    \\\"body\\\": [\\\"console.warn($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Log warning to the console\\\"\\n  },\\n  \\\"Log error to console\\\": {\\n    \\\"prefix\\\": \\\"error\\\",\\n    \\\"body\\\": [\\\"console.error($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Log error to the console\\\"\\n  },\\n  \\\"concat\\\": {\\n    \\\"prefix\\\": \\\"concat\\\",\\n    \\\"body\\\": [\\\"concat($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The concat() method concatenates the string arguments to the calling string and returns a new string.\\\"\\n  },\\n  \\\"endsWith\\\": {\\n    \\\"prefix\\\": \\\"endsWith\\\",\\n    \\\"body\\\": [\\\"endsWith($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The endsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.    \\\"\\n  },\\n  \\\"fromCharCode\\\": {\\n    \\\"prefix\\\": \\\"fromCharCode\\\",\\n    \\\"body\\\": [\\\"fromCharCode($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The static String.fromCharCode() method returns a string created from the specified sequence of UTF-16 code units.\\\"\\n  },\\n  \\\"includes\\\": {\\n    \\\"prefix\\\": \\\"includes\\\",\\n    \\\"body\\\": [\\\"includes($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The includes() method performs a case-sensitive search to determine whether one string may be found within another string, returning true or false as appropriate.\\\"\\n  },\\n  \\\"indexOf\\\": {\\n    \\\"prefix\\\": \\\"indexOf\\\",\\n    \\\"body\\\": [\\\"indexOf($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The indexOf() method, given one argument: a substring to search for, searches the entire calling string, and returns the index of the first occurrence of the specified substring. Given a second argument: a number, the method returns the first occurrence of the specified substring at an index greater than or equal to the specified number.\\\"\\n  },\\n  \\\"lastIndexOf\\\": {\\n    \\\"prefix\\\": \\\"lastIndexOf\\\",\\n    \\\"body\\\": [\\\"lastIndexOf($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The lastIndexOf() method, given one argument: a substring to search for, searches the entire calling string, and returns the index of the last occurrence of the specified substring. Given a second argument: a number, the method returns the last occurrence of the specified substring at an index less than or equal to the specified number.\\\"\\n  },\\n  \\\"localeCompare\\\": {\\n    \\\"prefix\\\": \\\"localeCompare\\\",\\n    \\\"body\\\": [\\\"localeCompare($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The localeCompare() method returns a number indicating whether a reference string comes before, or after, or is the same as the given string in sort order. In implementations with Intl.Collator API support, this method simply calls Intl.Collator.\\\"\\n  },\\n  \\\"match\\\": {\\n    \\\"prefix\\\": \\\"match\\\",\\n    \\\"body\\\": [\\\"match($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The match() method retrieves the result of matching a string against a regular expression.\\\"\\n  },\\n  \\\"matchAll\\\": {\\n    \\\"prefix\\\": \\\"matchAll\\\",\\n    \\\"body\\\": [\\\"matchAll($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The matchAll() method returns an iterator of all results matching a string against a regular expression, including capturing groups.\\\"\\n  },\\n  \\\"normalize\\\": {\\n    \\\"prefix\\\": \\\"normalize\\\",\\n    \\\"body\\\": [\\\"normalize($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The normalize() method returns the Unicode Normalization Form of the string.\\\"\\n  },\\n  \\\"repeat\\\": {\\n    \\\"prefix\\\": \\\"repeat\\\",\\n    \\\"body\\\": [\\\"repeat($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The repeat() method constructs and returns a new string which contains the specified number of copies of the string on which it was called, concatenated together.\\\"\\n  },\\n  \\\"replace\\\": {\\n    \\\"prefix\\\": \\\"replace\\\",\\n    \\\"body\\\": [\\\"replace($1, $2);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The replace() method returns a new string with one, some, or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function called for each match. If pattern is a string, only the first occurrence will be replaced. The original string is left unchanged.\\\"\\n  },\\n  \\\"replaceAll\\\": {\\n    \\\"prefix\\\": \\\"replaceAll\\\",\\n    \\\"body\\\": [\\\"replaceAll($1, $2);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The replaceAll() method returns a new string with all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match. The original string is left unchanged.\\\"\\n  },\\n  \\\"search\\\": {\\n    \\\"prefix\\\": \\\"search\\\",\\n    \\\"body\\\": [\\\"search($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The search() method executes a search for a match between a regular expression and this String object.\\\"\\n  },\\n  \\\"slice\\\": {\\n    \\\"prefix\\\": \\\"slice\\\",\\n    \\\"body\\\": [\\\"slice($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The slice() method extracts a section of a string and returns it as a new string, without modifying the original string.\\\"\\n  },\\n  \\\"split\\\": {\\n    \\\"prefix\\\": \\\"split\\\",\\n    \\\"body\\\": [\\\"split($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The split() method takes a pattern and divides a String into an ordered list of substrings by searching for the pattern, puts these substrings into an array, and returns the array.\\\"\\n  },\\n  \\\"startsWith\\\": {\\n    \\\"prefix\\\": \\\"startsWith\\\",\\n    \\\"body\\\": [\\\"startsWith($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The startsWith() method determines whether a string begins with the characters of a specified string, returning true or false as appropriate.\\\"\\n  },\\n  \\\"substring\\\": {\\n    \\\"prefix\\\": \\\"substring\\\",\\n    \\\"body\\\": [\\\"substring($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The substring() method returns the part of the string between the start and end indexes, or to the end of the string.\\\"\\n  },\\n  \\\"toLocaleLowerCase\\\": {\\n    \\\"prefix\\\": \\\"toLocaleLowerCase\\\",\\n    \\\"body\\\": [\\\"toLocaleLowerCase($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The toLocaleLowerCase() method returns the calling string value converted to lower case, according to any locale-specific case mappings.\\\"\\n  },\\n  \\\"toLocaleUpperCase\\\": {\\n    \\\"prefix\\\": \\\"toLocaleUpperCase\\\",\\n    \\\"body\\\": [\\\"toLocaleUpperCase($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The toLocaleUpperCase() method returns the calling string value converted to upper case, according to any locale-specific case mappings.\\\"\\n  },\\n  \\\"toLowerCase\\\": {\\n    \\\"prefix\\\": \\\"toLowerCase\\\",\\n    \\\"body\\\": [\\\"toLowerCase()\\\"],\\n    \\\"description\\\": \\\"The toLowerCase() method returns the calling string value converted to lower case.\\\"\\n  },\\n  \\\"toString\\\": {\\n    \\\"prefix\\\": \\\"toString\\\",\\n    \\\"body\\\": [\\\"toString()\\\"],\\n    \\\"description\\\": \\\"The toString() method returns a string representing the specified string value.\\\"\\n  },\\n  \\\"toUpperCase\\\": {\\n    \\\"prefix\\\": \\\"toUpperCase\\\",\\n    \\\"body\\\": [\\\"toUpperCase()\\\"],\\n    \\\"description\\\": \\\"The toUpperCase() method returns the calling string value converted to uppercase (the value will be converted to a string if it isn't one).\\\"\\n  },\\n  \\\"valueOf\\\": {\\n    \\\"prefix\\\": \\\"valueOf\\\",\\n    \\\"body\\\": [\\\"valueOf()\\\"],\\n    \\\"description\\\": \\\"The valueOf() method returns the primitive value of a String object.\\\"\\n  },\\n  \\\"isFinite\\\": {\\n    \\\"prefix\\\": \\\"isFinite\\\",\\n    \\\"body\\\": [\\\"isFinite($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Number.isFinite() method determines whether the passed value is a finite number — that is, it checks that a given value is a number, and the number is neither positive Infinity, negative Infinity, nor NaN.\\\"\\n  },\\n  \\\"parseFloat\\\": {\\n    \\\"prefix\\\": \\\"parseFloat\\\",\\n    \\\"body\\\": [\\\"parseFloat($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Number.parseFloat() method parses an argument and returns a floating point number. If a number cannot be parsed from the argument, it returns NaN.\\\"\\n  },\\n  \\\"isNaN\\\": {\\n    \\\"prefix\\\": \\\"isNaN\\\",\\n    \\\"body\\\": [\\\"isNaN($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Number.isNaN() method determines whether the passed value is the number value NaN, and returns false if the input is not of the Number type. It is a more robust version of the original, global isNaN() function.\\\"\\n  },\\n  \\\"parseInt\\\": {\\n    \\\"prefix\\\": \\\"parseInt\\\",\\n    \\\"body\\\": [\\\"parseInt($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Number.parseInt() method parses a string argument and returns an integer of the specified radix or base.\\\"\\n  },\\n  \\\"toFixed\\\": {\\n    \\\"prefix\\\": \\\"toFixed\\\",\\n    \\\"body\\\": [\\\"toFixed($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The toFixed() method formats a number using fixed-point notation.\\\"\\n  },\\n  \\\"toLocaleString\\\": {\\n    \\\"prefix\\\": \\\"toLocaleString\\\",\\n    \\\"body\\\": [\\\"toLocaleString($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The toLocaleString() method returns a string with a language-sensitive representation of this number. In implementations with Intl.NumberFormat API support, this method simply calls Intl.NumberFormat.\\\"\\n  },\\n  \\\"apply\\\": {\\n    \\\"prefix\\\": \\\"apply\\\",\\n    \\\"body\\\": [\\\"apply($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The apply() method calls the specified function with a given this value, and arguments provided as an array (or an array-like object).\\\"\\n  },\\n  \\\"bind\\\": {\\n    \\\"prefix\\\": \\\"bind\\\",\\n    \\\"body\\\": [\\\"bind($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\\\"\\n  },\\n  \\\"call\\\": {\\n    \\\"prefix\\\": \\\"call\\\",\\n    \\\"body\\\": [\\\"call($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The call() method calls the function with a given this value and arguments provided individually.\\\"\\n  },\\n  \\\"defineProperties\\\": {\\n    \\\"prefix\\\": \\\"defineProperties\\\",\\n    \\\"body\\\": [\\\"defineProperties($1, $2);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"entries\\\": {\\n    \\\"prefix\\\": \\\"entries\\\",\\n    \\\"body\\\": [\\\"entries($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Object.entries() method returns an array of a given object's own enumerable string-keyed property key-value pairs.\\\"\\n  },\\n  \\\"values\\\": {\\n    \\\"prefix\\\": \\\"values\\\",\\n    \\\"body\\\": [\\\"values($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The Object.values() method returns an array of a given object's own enumerable string-keyed property values.\\\"\\n  },\\n  \\\"focus\\\": {\\n    \\\"prefix\\\": \\\"focus\\\",\\n    \\\"body\\\": [\\\"focus()\\\"],\\n    \\\"description\\\": \\\"The HTMLElement.focus() method sets focus on the specified element, if it can be focused. The focused element is the element that will receive keyboard and similar events by default.\\\"\\n  },\\n  \\\"blur\\\": {\\n    \\\"prefix\\\": \\\"blur\\\",\\n    \\\"body\\\": [\\\"blur()\\\"],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"innerText\\\": {\\n    \\\"prefix\\\": \\\"innerText\\\",\\n    \\\"body\\\": [\\\"innerText\\\"],\\n    \\\"description\\\": \\\"The innerText property of the HTMLElement interface represents the rendered text content of a node and its descendants.\\\"\\n  },\\n  \\\"push\\\": {\\n    \\\"prefix\\\": \\\"push\\\",\\n    \\\"body\\\": [\\\"push($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The push() method adds one or more elements to the end of an array and returns the new length of the array.\\\"\\n  },\\n  \\\"reverse\\\": {\\n    \\\"prefix\\\": \\\"reverse\\\",\\n    \\\"body\\\": [\\\"reverse();\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The reverse() method reverses an array in place and returns the reference to the same array, the first array element now becoming the last, and the last array element becoming the first. In other words, elements order in the array will be turned towards the direction opposite to that previously stated.\\\"\\n  },\\n  \\\"sort\\\": {\\n    \\\"prefix\\\": \\\"sort\\\",\\n    \\\"body\\\": [\\\"sort($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The sort() method sorts the elements of an array in place and returns the reference to the same array, now sorted. The default sort order is ascending, built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.\\\"\\n  },\\n  \\\"splice\\\": {\\n    \\\"prefix\\\": \\\"splice\\\",\\n    \\\"body\\\": [\\\"splice($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place. To access part of an array without modifying it, see slice().\\\"\\n  },\\n  \\\"toJSON\\\": {\\n    \\\"prefix\\\": \\\"toJSON\\\",\\n    \\\"body\\\": [\\\"toJSON();\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The toJSON() method returns a string representation of the Date object.\\\"\\n  },\\n  \\\"toDateString\\\": {\\n    \\\"prefix\\\": \\\"toDateString\\\",\\n    \\\"body\\\": [\\\"toDateString();\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"setTime\\\": {\\n    \\\"prefix\\\": \\\"setTime\\\",\\n    \\\"body\\\": [\\\"setTime($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The setTime() method sets the Date object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC.\\\"\\n  },\\n  \\\"setDate\\\": {\\n    \\\"prefix\\\": \\\"setDate\\\",\\n    \\\"body\\\": [\\\"setDate($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"The setDate() method changes the day of the month of a given Date instance, based on local time.\\\"\\n  },\\n\\n  \\\"Constructor\\\": {\\n    \\\"prefix\\\": \\\"ctor\\\",\\n    \\\"body\\\": [\\\"/**\\\", \\\" *\\\", \\\" */\\\", \\\"constructor() {\\\", \\\"\\\\tsuper();\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Constructor\\\"\\n  },\\n  \\\"Class Definition\\\": {\\n    \\\"prefix\\\": \\\"class\\\",\\n    \\\"body\\\": [\\n      \\\"class ${1:name} {\\\",\\n      \\\"\\\\tconstructor(${2:parameters}) {\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t}\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Class Definition\\\"\\n  },\\n  \\\"Interface Definition\\\": {\\n    \\\"prefix\\\": \\\"iface\\\",\\n    \\\"body\\\": [\\\"interface ${1:name} {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Interface Definition\\\"\\n  },\\n  \\\"Public Method Definition\\\": {\\n    \\\"prefix\\\": \\\"public method\\\",\\n    \\\"body\\\": [\\\"/**\\\", \\\" * ${1:name}\\\", \\\" */\\\", \\\"public ${1:name}() {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Public Method Definition\\\"\\n  },\\n  \\\"Private Method Definition\\\": {\\n    \\\"prefix\\\": \\\"private method\\\",\\n    \\\"body\\\": [\\\"private ${1:name}() {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Private Method Definition\\\"\\n  },\\n  \\\"Import external module.\\\": {\\n    \\\"prefix\\\": \\\"import statement\\\",\\n    \\\"body\\\": [\\\"import { $0 } from \\\\\\\"${1:module}\\\\\\\";\\\"],\\n    \\\"description\\\": \\\"Import external module.\\\"\\n  },\\n  \\\"Property getter\\\": {\\n    \\\"prefix\\\": \\\"get\\\",\\n    \\\"body\\\": [\\n      \\\"\\\",\\n      \\\"public get ${1:value}() : ${2:string} {\\\",\\n      \\\"\\\\t${3:return $0}\\\",\\n      \\\"}\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Property getter\\\"\\n  },\\n  \\\"Log to the console\\\": {\\n    \\\"prefix\\\": \\\"log\\\",\\n    \\\"body\\\": [\\\"console.log($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Log to the console\\\"\\n  },\\n  \\\"Log warning to console\\\": {\\n    \\\"prefix\\\": \\\"warn\\\",\\n    \\\"body\\\": [\\\"console.warn($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Log warning to the console\\\"\\n  },\\n  \\\"Log error to console\\\": {\\n    \\\"prefix\\\": \\\"error\\\",\\n    \\\"body\\\": [\\\"console.error($1);\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Log error to the console\\\"\\n  },\\n  \\\"Define a full property\\\": {\\n    \\\"prefix\\\": \\\"prop\\\",\\n    \\\"body\\\": [\\n      \\\"\\\",\\n      \\\"private _${1:value} : ${2:string};\\\",\\n      \\\"public get ${1:value}() : ${2:string} {\\\",\\n      \\\"\\\\treturn this._${1:value};\\\",\\n      \\\"}\\\",\\n      \\\"public set ${1:value}(v : ${2:string}) {\\\",\\n      \\\"\\\\tthis._${1:value} = v;\\\",\\n      \\\"}\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Define a full property\\\"\\n  },\\n  \\\"Triple-slash reference\\\": {\\n    \\\"prefix\\\": \\\"ref\\\",\\n    \\\"body\\\": [\\\"/// <reference path=\\\\\\\"$1\\\\\\\" />\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Triple-slash reference\\\"\\n  },\\n  \\\"Property setter\\\": {\\n    \\\"prefix\\\": \\\"set\\\",\\n    \\\"body\\\": [\\n      \\\"\\\",\\n      \\\"public set ${1:value}(v : ${2:string}) {\\\",\\n      \\\"\\\\tthis.$3 = v;\\\",\\n      \\\"}\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Property setter\\\"\\n  },\\n  \\\"Throw Exception\\\": {\\n    \\\"prefix\\\": \\\"throw\\\",\\n    \\\"body\\\": [\\\"throw \\\\\\\"$1\\\\\\\";\\\", \\\"$0\\\"],\\n    \\\"description\\\": \\\"Throw Exception\\\"\\n  },\\n  \\\"For Loop\\\": {\\n    \\\"prefix\\\": \\\"for\\\",\\n    \\\"body\\\": [\\n      \\\"for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {\\\",\\n      \\\"\\\\tconst ${3:element} = ${2:array}[${1:index}];\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"For Loop\\\"\\n  },\\n  \\\"For-Each Loop using =>\\\": {\\n    \\\"prefix\\\": \\\"foreach =>\\\",\\n    \\\"body\\\": [\\\"${1:array}.forEach(${2:element} => {\\\", \\\"\\\\t$0\\\", \\\"});\\\"],\\n    \\\"description\\\": \\\"For-Each Loop using =>\\\"\\n  },\\n  \\\"For-In Loop\\\": {\\n    \\\"prefix\\\": \\\"forin\\\",\\n    \\\"body\\\": [\\n      \\\"for (const ${1:key} in ${2:object}) {\\\",\\n      \\\"\\\\tif (${2:object}.hasOwnProperty(${1:key})) {\\\",\\n      \\\"\\\\t\\\\tconst ${3:element} = ${2:object}[${1:key}];\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t}\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"For-In Loop\\\"\\n  },\\n  \\\"For-Of Loop\\\": {\\n    \\\"prefix\\\": \\\"forof\\\",\\n    \\\"body\\\": [\\\"for (const ${1:iterator} of ${2:object}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"For-Of Loop\\\"\\n  },\\n  \\\"For-Await-Of Loop\\\": {\\n    \\\"prefix\\\": \\\"forawaitof\\\",\\n    \\\"body\\\": [\\\"for await (const ${1:iterator} of ${2:object}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"For-Await-Of Loop\\\"\\n  },\\n  \\\"Function Statement\\\": {\\n    \\\"prefix\\\": \\\"function\\\",\\n    \\\"body\\\": [\\\"function ${1:name}(${2:params}:${3:type}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Function Statement\\\"\\n  },\\n  \\\"If Statement\\\": {\\n    \\\"prefix\\\": \\\"if\\\",\\n    \\\"body\\\": [\\\"if (${1:condition}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"If Statement\\\"\\n  },\\n  \\\"If-Else Statement\\\": {\\n    \\\"prefix\\\": \\\"ifelse\\\",\\n    \\\"body\\\": [\\\"if (${1:condition}) {\\\", \\\"\\\\t$0\\\", \\\"} else {\\\", \\\"\\\\t\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"If-Else Statement\\\"\\n  },\\n  \\\"New Statement\\\": {\\n    \\\"prefix\\\": \\\"new\\\",\\n    \\\"body\\\": [\\\"const ${1:name} = new ${2:type}(${3:arguments});$0\\\"],\\n    \\\"description\\\": \\\"New Statement\\\"\\n  },\\n  \\\"Switch Statement\\\": {\\n    \\\"prefix\\\": \\\"switch\\\",\\n    \\\"body\\\": [\\n      \\\"switch (${1:key}) {\\\",\\n      \\\"\\\\tcase ${2:value}:\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t\\\\tbreak;\\\",\\n      \\\"\\\",\\n      \\\"\\\\tdefault:\\\",\\n      \\\"\\\\t\\\\tbreak;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Switch Statement\\\"\\n  },\\n  \\\"While Statement\\\": {\\n    \\\"prefix\\\": \\\"while\\\",\\n    \\\"body\\\": [\\\"while (${1:condition}) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"While Statement\\\"\\n  },\\n  \\\"Do-While Statement\\\": {\\n    \\\"prefix\\\": \\\"dowhile\\\",\\n    \\\"body\\\": [\\\"do {\\\", \\\"\\\\t$0\\\", \\\"} while (${1:condition});\\\"],\\n    \\\"description\\\": \\\"Do-While Statement\\\"\\n  },\\n  \\\"Try-Catch Statement\\\": {\\n    \\\"prefix\\\": \\\"trycatch\\\",\\n    \\\"body\\\": [\\\"try {\\\", \\\"\\\\t$0\\\", \\\"} catch (${1:error}) {\\\", \\\"\\\\t\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Try-Catch Statement\\\"\\n  },\\n  \\\"Set Timeout Function\\\": {\\n    \\\"prefix\\\": \\\"settimeout\\\",\\n    \\\"body\\\": [\\\"setTimeout(() => {\\\", \\\"\\\\t$0\\\", \\\"}, ${1:timeout});\\\"],\\n    \\\"description\\\": \\\"Set Timeout Function\\\"\\n  },\\n  \\\"Region Start\\\": {\\n    \\\"prefix\\\": \\\"#region\\\",\\n    \\\"body\\\": [\\\"//#region $0\\\"],\\n    \\\"description\\\": \\\"Folding Region Start\\\"\\n  },\\n  \\\"Region End\\\": {\\n    \\\"prefix\\\": \\\"#endregion\\\",\\n    \\\"body\\\": [\\\"//#endregion\\\"],\\n    \\\"description\\\": \\\"Folding Region End\\\"\\n  }\\n}\\n\",\"html.json\":\"{\\n  \\\"doctype\\\": {\\n    \\\"prefix\\\": \\\"doctype\\\",\\n    \\\"body\\\": [\\\"<!DOCTYPE>\\\", \\\"$1\\\"],\\n    \\\"description\\\": \\\"HTML - Defines the document type\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"a\\\": {\\n    \\\"prefix\\\": \\\"a\\\",\\n    \\\"body\\\": \\\"<a href=\\\\\\\"$1\\\\\\\">$2</a>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines a hyperlink\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"abbr\\\": {\\n    \\\"prefix\\\": \\\"abbr\\\",\\n    \\\"body\\\": \\\"<abbr title=\\\\\\\"$1\\\\\\\">$2</abbr>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines an abbreviation\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"address\\\": {\\n    \\\"prefix\\\": \\\"address\\\",\\n    \\\"body\\\": [\\\"<address>\\\", \\\"$1\\\", \\\"</address>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an address element\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"area\\\": {\\n    \\\"prefix\\\": \\\"area\\\",\\n    \\\"body\\\": \\\"<area shape=\\\\\\\"$1\\\\\\\" coords=\\\\\\\"$2\\\\\\\" href=\\\\\\\"$3\\\\\\\" alt=\\\\\\\"$4\\\\\\\">$5\\\",\\n    \\\"description\\\": \\\"HTML - Defines an area inside an image map\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"article\\\": {\\n    \\\"prefix\\\": \\\"article\\\",\\n    \\\"body\\\": [\\\"<article>\\\", \\\"\\\\t$1\\\", \\\"</article>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an article\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"aside\\\": {\\n    \\\"prefix\\\": \\\"aside\\\",\\n    \\\"body\\\": [\\\"<aside>\\\", \\\"\\\\t$1\\\", \\\"</aside>$2\\\"],\\n    \\\"description\\\": \\\"HTML - Defines content aside from the page content\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"audio\\\": {\\n    \\\"prefix\\\": \\\"audio\\\",\\n    \\\"body\\\": [\\\"<audio controls>\\\", \\\"\\\\t$1\\\", \\\"</audio>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines sounds content\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"b\\\": {\\n    \\\"prefix\\\": \\\"b\\\",\\n    \\\"body\\\": \\\"<b>$1</b>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines bold text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"base\\\": {\\n    \\\"prefix\\\": \\\"base\\\",\\n    \\\"body\\\": \\\"<base href=\\\\\\\"$1\\\\\\\" target=\\\\\\\"$2\\\\\\\">$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines a base URL for all the links in a page\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"bdi\\\": {\\n    \\\"prefix\\\": \\\"bdi\\\",\\n    \\\"body\\\": \\\"<bdi>$1</bdi>$2\\\",\\n    \\\"description\\\": \\\"HTML - Used to isolate text that is of unknown directionality\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"bdo\\\": {\\n    \\\"prefix\\\": \\\"bdo\\\",\\n    \\\"body\\\": [\\\"<bdo dir=\\\\\\\"$1\\\\\\\">\\\", \\\"$2\\\", \\\"</bdo>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines the direction of text display\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"big\\\": {\\n    \\\"prefix\\\": \\\"big\\\",\\n    \\\"body\\\": \\\"<big>$1</big>$2\\\",\\n    \\\"description\\\": \\\"HTML - Used to make text bigger\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"blockquote\\\": {\\n    \\\"prefix\\\": \\\"blockquote\\\",\\n    \\\"body\\\": [\\\"<blockquote cite=\\\\\\\"$2\\\\\\\">\\\", \\\"\\\\t$1\\\", \\\"</blockquote>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a long quotation\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"body\\\": {\\n    \\\"prefix\\\": \\\"body\\\",\\n    \\\"body\\\": [\\\"<body>\\\", \\\"\\\\t$0\\\", \\\"</body>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines the body element\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"br\\\": {\\n    \\\"prefix\\\": \\\"br\\\",\\n    \\\"body\\\": \\\"<br>\\\",\\n    \\\"description\\\": \\\"HTML - Inserts a single line break\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"button\\\": {\\n    \\\"prefix\\\": \\\"button\\\",\\n    \\\"body\\\": \\\"<button type=\\\\\\\"$1\\\\\\\">$2</button>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines a push button\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"canvas\\\": {\\n    \\\"prefix\\\": \\\"canvas\\\",\\n    \\\"body\\\": \\\"<canvas id=\\\\\\\"$1\\\\\\\">$2</canvas>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines graphics\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"caption\\\": {\\n    \\\"prefix\\\": \\\"caption\\\",\\n    \\\"body\\\": \\\"<caption>$1</caption>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a table caption\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"cite\\\": {\\n    \\\"prefix\\\": \\\"cite\\\",\\n    \\\"body\\\": \\\"<cite>$1</cite>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a citation\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"code\\\": {\\n    \\\"prefix\\\": \\\"code\\\",\\n    \\\"body\\\": \\\"<code>$1</code>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines computer code text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"col\\\": {\\n    \\\"prefix\\\": \\\"col\\\",\\n    \\\"body\\\": \\\"<col>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines attributes for table columns\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"colgroup\\\": {\\n    \\\"prefix\\\": \\\"colgroup\\\",\\n    \\\"body\\\": [\\\"<colgroup>\\\", \\\"\\\\t$1\\\", \\\"</colgroup>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines group of table columns\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"command\\\": {\\n    \\\"prefix\\\": \\\"command\\\",\\n    \\\"body\\\": \\\"<command>$1</command>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a command button [not supported]\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"datalist\\\": {\\n    \\\"prefix\\\": \\\"datalist\\\",\\n    \\\"body\\\": [\\\"<datalist>\\\", \\\"\\\\t$1\\\", \\\"</datalist>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a dropdown list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"dd\\\": {\\n    \\\"prefix\\\": \\\"dd\\\",\\n    \\\"body\\\": \\\"<dd>$1</dd>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a definition description\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"del\\\": {\\n    \\\"prefix\\\": \\\"del\\\",\\n    \\\"body\\\": \\\"<del>$1</del>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines deleted text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"details\\\": {\\n    \\\"prefix\\\": \\\"details\\\",\\n    \\\"body\\\": [\\\"<details>\\\", \\\"\\\\t$1\\\", \\\"</details>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines details of an element\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"dialog\\\": {\\n    \\\"prefix\\\": \\\"dialog\\\",\\n    \\\"body\\\": \\\"<dialog>$1</dialog>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a dialog (conversation)\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"dfn\\\": {\\n    \\\"prefix\\\": \\\"dfn\\\",\\n    \\\"body\\\": \\\"<dfn>$1</dfn>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a definition term\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"div\\\": {\\n    \\\"prefix\\\": \\\"div\\\",\\n    \\\"body\\\": [\\\"<div>\\\", \\\"\\\\t$1\\\", \\\"</div>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a section in a document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"dl\\\": {\\n    \\\"prefix\\\": \\\"dl\\\",\\n    \\\"body\\\": [\\\"<dl>\\\", \\\"\\\\t$1\\\", \\\"</dl>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a definition list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"dt\\\": {\\n    \\\"prefix\\\": \\\"dt\\\",\\n    \\\"body\\\": \\\"<dt>$1</dt>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a definition term\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"em\\\": {\\n    \\\"prefix\\\": \\\"em\\\",\\n    \\\"body\\\": \\\"<em>$1</em>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines emphasized text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"embed\\\": {\\n    \\\"prefix\\\": \\\"embed\\\",\\n    \\\"body\\\": \\\"<embed src=\\\\\\\"$1\\\\\\\">$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines external interactive content ot plugin\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"fieldset\\\": {\\n    \\\"prefix\\\": \\\"fieldset\\\",\\n    \\\"body\\\": [\\\"<fieldset>\\\", \\\"\\\\t$1\\\", \\\"</fieldset>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a fieldset\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"figcaption\\\": {\\n    \\\"prefix\\\": \\\"figcaption\\\",\\n    \\\"body\\\": \\\"<figcaption>$1</figcaption>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a caption for a figure\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"figure\\\": {\\n    \\\"prefix\\\": \\\"figure\\\",\\n    \\\"body\\\": [\\\"<figure>\\\", \\\"\\\\t$1\\\", \\\"</figure>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a group of media content, and their caption\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"footer\\\": {\\n    \\\"prefix\\\": \\\"footer\\\",\\n    \\\"body\\\": [\\\"<footer>\\\", \\\"\\\\t$1\\\", \\\"</footer>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a footer for a section or page\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"form\\\": {\\n    \\\"prefix\\\": \\\"form\\\",\\n    \\\"body\\\": [\\\"<form>\\\", \\\"\\\\t$1\\\", \\\"</form>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a form\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h1\\\": {\\n    \\\"prefix\\\": \\\"h1\\\",\\n    \\\"body\\\": \\\"<h1>$1</h1>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 1\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h2\\\": {\\n    \\\"prefix\\\": \\\"h2\\\",\\n    \\\"body\\\": \\\"<h2>$1</h2>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 2\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h3\\\": {\\n    \\\"prefix\\\": \\\"h3\\\",\\n    \\\"body\\\": \\\"<h3>$1</h3>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 3\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h4\\\": {\\n    \\\"prefix\\\": \\\"h4\\\",\\n    \\\"body\\\": \\\"<h4>$1</h4>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 4\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h5\\\": {\\n    \\\"prefix\\\": \\\"h5\\\",\\n    \\\"body\\\": \\\"<h5>$1</h5>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 5\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"h6\\\": {\\n    \\\"prefix\\\": \\\"h6\\\",\\n    \\\"body\\\": \\\"<h6>$1</h6>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines header 6\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"head\\\": {\\n    \\\"prefix\\\": \\\"head\\\",\\n    \\\"body\\\": [\\\"<head>\\\", \\\"\\\\t$1\\\", \\\"</head>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines information about the document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"header\\\": {\\n    \\\"prefix\\\": \\\"header\\\",\\n    \\\"body\\\": [\\\"<header>\\\", \\\"\\\\t$1\\\", \\\"</header>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a header for a section of page\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"hgroup\\\": {\\n    \\\"prefix\\\": \\\"hgroup\\\",\\n    \\\"body\\\": [\\\"<hgroup>\\\", \\\"\\\\t$1\\\", \\\"</hgroup>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines information about a section in a document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"hr\\\": {\\n    \\\"prefix\\\": \\\"hr\\\",\\n    \\\"body\\\": \\\"<hr>\\\",\\n    \\\"description\\\": \\\"HTML - Defines a horizontal rule\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"html\\\": {\\n    \\\"prefix\\\": \\\"html\\\",\\n    \\\"body\\\": [\\\"<html>\\\", \\\"\\\\t$0\\\", \\\"</html>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an html document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"html5\\\": {\\n    \\\"prefix\\\": \\\"html5\\\",\\n    \\\"body\\\": [\\n      \\\"<!DOCTYPE html>\\\",\\n      \\\"<html lang=\\\\\\\"$1en\\\\\\\">\\\",\\n      \\\"\\\\t<head>\\\",\\n      \\\"\\\\t\\\\t<title>$2</title>\\\",\\n      \\\"\\\\t\\\\t<meta charset=\\\\\\\"UTF-8\\\\\\\">\\\",\\n      \\\"\\\\t\\\\t<meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width, initial-scale=1\\\\\\\">\\\",\\n      \\\"\\\\t\\\\t<link href=\\\\\\\"$3css/style.css\\\\\\\" rel=\\\\\\\"stylesheet\\\\\\\">\\\",\\n      \\\"\\\\t</head>\\\",\\n      \\\"\\\\t<body>\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"\\\\t</body>\\\",\\n      \\\"</html>\\\"\\n    ],\\n    \\\"description\\\": \\\"HTML - Defines a template for a html5 document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"i\\\": {\\n    \\\"prefix\\\": \\\"i\\\",\\n    \\\"body\\\": \\\"<i>$1</i>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines italic text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"iframe\\\": {\\n    \\\"prefix\\\": \\\"iframe\\\",\\n    \\\"body\\\": \\\"<iframe src=\\\\\\\"$1\\\\\\\">$2</iframe>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines an inline sub window\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"img\\\": {\\n    \\\"prefix\\\": \\\"img\\\",\\n    \\\"body\\\": \\\"<img src=\\\\\\\"$1\\\\\\\" alt=\\\\\\\"$2\\\\\\\">$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines an image\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"input\\\": {\\n    \\\"prefix\\\": \\\"input\\\",\\n    \\\"body\\\": \\\"<input type=\\\\\\\"$1\\\\\\\" name=\\\\\\\"$2\\\\\\\" value=\\\\\\\"$3\\\\\\\">$4\\\",\\n    \\\"description\\\": \\\"HTML - Defines an input field\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"ins\\\": {\\n    \\\"prefix\\\": \\\"ins\\\",\\n    \\\"body\\\": \\\"<ins>$1</ins>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines inserted text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"keygen\\\": {\\n    \\\"prefix\\\": \\\"keygen\\\",\\n    \\\"body\\\": \\\"<keygen name=\\\\\\\"$1\\\\\\\">$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a generated key in a form\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"kbd\\\": {\\n    \\\"prefix\\\": \\\"kbd\\\",\\n    \\\"body\\\": \\\"<kbd>$1</kbd>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines keyboard text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"label\\\": {\\n    \\\"prefix\\\": \\\"label\\\",\\n    \\\"body\\\": \\\"<label for=\\\\\\\"$1\\\\\\\">$2</label>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines an inline window\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"legend\\\": {\\n    \\\"prefix\\\": \\\"legend\\\",\\n    \\\"body\\\": \\\"<legend>$1</legend>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a title in a fieldset\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"li\\\": {\\n    \\\"prefix\\\": \\\"li\\\",\\n    \\\"body\\\": \\\"<li>$1</li>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a list item\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"link\\\": {\\n    \\\"prefix\\\": \\\"link\\\",\\n    \\\"body\\\": \\\"<link rel=\\\\\\\"$1\\\\\\\" type=\\\\\\\"$2\\\\\\\" href=\\\\\\\"$3\\\\\\\">$4\\\",\\n    \\\"description\\\": \\\"HTML - Defines a resource reference\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"main\\\": {\\n    \\\"prefix\\\": \\\"main\\\",\\n    \\\"body\\\": [\\\"<main>\\\", \\\"\\\\t$1\\\", \\\"</main>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an image map\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"map\\\": {\\n    \\\"prefix\\\": \\\"map\\\",\\n    \\\"body\\\": [\\\"<map name=\\\\\\\"$1\\\\\\\">\\\", \\\"\\\\t$2\\\", \\\"</map>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an image map\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"mark\\\": {\\n    \\\"prefix\\\": \\\"mark\\\",\\n    \\\"body\\\": \\\"<mark>$1</mark>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines marked text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"menu\\\": {\\n    \\\"prefix\\\": \\\"menu\\\",\\n    \\\"body\\\": [\\\"<menu>\\\", \\\"\\\\t$1\\\", \\\"</menu>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a menu list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"menuitem\\\": {\\n    \\\"prefix\\\": \\\"menuitem\\\",\\n    \\\"body\\\": \\\"<menuitem>$1</menuitem>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a menu item [firefox only]\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"meta\\\": {\\n    \\\"prefix\\\": \\\"meta\\\",\\n    \\\"body\\\": \\\"<meta name=\\\\\\\"$1\\\\\\\" content=\\\\\\\"$2\\\\\\\">$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines meta information\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"meter\\\": {\\n    \\\"prefix\\\": \\\"meter\\\",\\n    \\\"body\\\": \\\"<meter value=\\\\\\\"$1\\\\\\\">$2</meter>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines measurement within a predefined range\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"nav\\\": {\\n    \\\"prefix\\\": \\\"nav\\\",\\n    \\\"body\\\": [\\\"<nav>\\\", \\\"\\\\t$1\\\", \\\"</nav>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines navigation links\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"noscript\\\": {\\n    \\\"prefix\\\": \\\"noscript\\\",\\n    \\\"body\\\": [\\\"<noscript>\\\", \\\"$1\\\", \\\"</noscript>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a noscript section\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"object\\\": {\\n    \\\"prefix\\\": \\\"object\\\",\\n    \\\"body\\\": \\\"<object width=\\\\\\\"$1\\\\\\\" height=\\\\\\\"$2\\\\\\\" data=\\\\\\\"$3\\\\\\\">$4</object>$5\\\",\\n    \\\"description\\\": \\\"HTML - Defines an embedded object\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"ol\\\": {\\n    \\\"prefix\\\": \\\"ol\\\",\\n    \\\"body\\\": [\\\"<ol>\\\", \\\"\\\\t$1\\\", \\\"</ol>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an ordered list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"optgroup\\\": {\\n    \\\"prefix\\\": \\\"optgroup\\\",\\n    \\\"body\\\": [\\\"<optgroup>\\\", \\\"\\\\t$1\\\", \\\"</optgroup>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an option group\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"option\\\": {\\n    \\\"prefix\\\": \\\"option\\\",\\n    \\\"body\\\": \\\"<option value=\\\\\\\"$1\\\\\\\">$2</option>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines an option in a drop-down list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"output\\\": {\\n    \\\"prefix\\\": \\\"output\\\",\\n    \\\"body\\\": \\\"<output name=\\\\\\\"$1\\\\\\\" for=\\\\\\\"$2\\\\\\\">$3</output>$4\\\",\\n    \\\"description\\\": \\\"HTML - Defines some types of output\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"p\\\": {\\n    \\\"prefix\\\": \\\"p\\\",\\n    \\\"body\\\": \\\"<p>$1</p>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a paragraph\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"param\\\": {\\n    \\\"prefix\\\": \\\"param\\\",\\n    \\\"body\\\": \\\"<param name=\\\\\\\"$1\\\\\\\" value=\\\\\\\"$2\\\\\\\">$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines a parameter for an object\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"pre\\\": {\\n    \\\"prefix\\\": \\\"pre\\\",\\n    \\\"body\\\": [\\\"<pre>$1</pre>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines preformatted text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"progress\\\": {\\n    \\\"prefix\\\": \\\"progress\\\",\\n    \\\"body\\\": \\\"<progress value=\\\\\\\"$1\\\\\\\" max=\\\\\\\"$2\\\\\\\">$3</progress>$4\\\",\\n    \\\"description\\\": \\\"HTML - Defines progress of a task of any kind\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"q\\\": {\\n    \\\"prefix\\\": \\\"q\\\",\\n    \\\"body\\\": \\\"<q>$1</q>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a short quotation\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"rp\\\": {\\n    \\\"prefix\\\": \\\"rp\\\",\\n    \\\"body\\\": \\\"<rp>$1</rp>$2\\\",\\n    \\\"description\\\": \\\"HTML - Used in ruby annotations to define what to show browsers that do not support the ruby element\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"rt\\\": {\\n    \\\"prefix\\\": \\\"rt\\\",\\n    \\\"body\\\": \\\"<rt>$1</rt>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines explanation to ruby annotations\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"ruby\\\": {\\n    \\\"prefix\\\": \\\"ruby\\\",\\n    \\\"body\\\": [\\\"<ruby>\\\", \\\"$1\\\", \\\"</ruby>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines ruby annotations\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"s\\\": {\\n    \\\"prefix\\\": \\\"s\\\",\\n    \\\"body\\\": \\\"<s>$1</s>$2\\\",\\n    \\\"description\\\": \\\"HTML - Used to define strikethrough text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"samp\\\": {\\n    \\\"prefix\\\": \\\"samp\\\",\\n    \\\"body\\\": \\\"<samp>$1</samp>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines sample computer code\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"script\\\": {\\n    \\\"prefix\\\": \\\"script\\\",\\n    \\\"body\\\": [\\\"<script>\\\", \\\"\\\\t$1\\\", \\\"</script>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a script\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"section\\\": {\\n    \\\"prefix\\\": \\\"section\\\",\\n    \\\"body\\\": [\\\"<section>\\\", \\\"\\\\t$1\\\", \\\"</section>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a section\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"select\\\": {\\n    \\\"prefix\\\": \\\"select\\\",\\n    \\\"body\\\": [\\\"<select>\\\", \\\"\\\\t$1\\\", \\\"</select>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a selectable list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"small\\\": {\\n    \\\"prefix\\\": \\\"small\\\",\\n    \\\"body\\\": \\\"<small>$1</small>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines small text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"source\\\": {\\n    \\\"prefix\\\": \\\"source\\\",\\n    \\\"body\\\": \\\"<source src=\\\\\\\"$1\\\\\\\" type=\\\\\\\"$2\\\\\\\">$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines media resource\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"span\\\": {\\n    \\\"prefix\\\": \\\"span\\\",\\n    \\\"body\\\": \\\"<span>$1</span>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a section in a document\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"strong\\\": {\\n    \\\"prefix\\\": \\\"strong\\\",\\n    \\\"body\\\": \\\"<strong>$1</strong>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines strong text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"style\\\": {\\n    \\\"prefix\\\": \\\"style\\\",\\n    \\\"body\\\": [\\\"<style>\\\", \\\"$1\\\", \\\"</style>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a style definition\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"sub\\\": {\\n    \\\"prefix\\\": \\\"sub\\\",\\n    \\\"body\\\": \\\"<sub>$1</sub>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines sub-scripted text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"sup\\\": {\\n    \\\"prefix\\\": \\\"sup\\\",\\n    \\\"body\\\": \\\"<sup>$1</sup>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines super-scripted text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"summary\\\": {\\n    \\\"prefix\\\": \\\"summary\\\",\\n    \\\"body\\\": \\\"<summary>$1</summary>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a visible heading for the detail element [limited support]\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"table\\\": {\\n    \\\"prefix\\\": \\\"table\\\",\\n    \\\"body\\\": [\\\"<table>\\\", \\\"\\\\t$1\\\", \\\"</table>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a table\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"tbody\\\": {\\n    \\\"prefix\\\": \\\"tbody\\\",\\n    \\\"body\\\": [\\\"<tbody>\\\", \\\"\\\\t$1\\\", \\\"</tbody>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a table body\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"td\\\": {\\n    \\\"prefix\\\": \\\"td\\\",\\n    \\\"body\\\": \\\"<td>$1</td>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a table cell\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"textarea\\\": {\\n    \\\"prefix\\\": \\\"textarea\\\",\\n    \\\"body\\\": \\\"<textarea rows=\\\\\\\"$1\\\\\\\" cols=\\\\\\\"$2\\\\\\\">$3</textarea>$4\\\",\\n    \\\"description\\\": \\\"HTML - Defines a text area\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"tfoot\\\": {\\n    \\\"prefix\\\": \\\"tfoot\\\",\\n    \\\"body\\\": [\\\"<tfoot>\\\", \\\"\\\\t$1\\\", \\\"</tfoot>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a table footer\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"thead\\\": {\\n    \\\"prefix\\\": \\\"thead\\\",\\n    \\\"body\\\": [\\\"<thead>\\\", \\\"$1\\\", \\\"</thead>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a table head\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"th\\\": {\\n    \\\"prefix\\\": \\\"th\\\",\\n    \\\"body\\\": \\\"<th>$1</th>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a table header\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"time\\\": {\\n    \\\"prefix\\\": \\\"time\\\",\\n    \\\"body\\\": \\\"<time datetime=\\\\\\\"$1\\\\\\\">$2</time>$3\\\",\\n    \\\"description\\\": \\\"HTML - Defines a date/time\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"title\\\": {\\n    \\\"prefix\\\": \\\"title\\\",\\n    \\\"body\\\": \\\"<title>$1</title>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines the document title\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"tr\\\": {\\n    \\\"prefix\\\": \\\"tr\\\",\\n    \\\"body\\\": \\\"<tr>$1</tr>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a table row\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"track\\\": {\\n    \\\"prefix\\\": \\\"track\\\",\\n    \\\"body\\\": \\\"<track src=\\\\\\\"$1\\\\\\\" kind=\\\\\\\"$2\\\\\\\" srclang=\\\\\\\"$3\\\\\\\" label=\\\\\\\"$4\\\\\\\">$5\\\",\\n    \\\"description\\\": \\\"HTML - Defines a table row\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"u\\\": {\\n    \\\"prefix\\\": \\\"u\\\",\\n    \\\"body\\\": \\\"<u>$1</u>$2\\\",\\n    \\\"description\\\": \\\"HTML - Used to define underlined text\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"ul\\\": {\\n    \\\"prefix\\\": \\\"ul\\\",\\n    \\\"body\\\": [\\\"<ul>\\\", \\\"\\\\t$1\\\", \\\"</ul>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines an unordered list\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"var\\\": {\\n    \\\"prefix\\\": \\\"var\\\",\\n    \\\"body\\\": \\\"<var>$1</var>$2\\\",\\n    \\\"description\\\": \\\"HTML - Defines a variable\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  },\\n  \\\"video\\\": {\\n    \\\"prefix\\\": \\\"video\\\",\\n    \\\"body\\\": [\\\"<video width=\\\\\\\"$1\\\\\\\" height=\\\\\\\"$2\\\\\\\" controls>\\\", \\\"\\\\t$3\\\", \\\"</video>\\\"],\\n    \\\"description\\\": \\\"HTML - Defines a video\\\",\\n    \\\"scope\\\": \\\"text.html\\\"\\n  }\\n}\\n\",\"css.json\":\"{\\n  \\\"align-items\\\": {\\n    \\\"prefix\\\": \\\"ai\\\",\\n    \\\"body\\\": \\\"align-items: ${1|flex-start,flex-end,center,baseline,stretch,start,end,self-start,self-end|};\\\",\\n    \\\"description\\\": \\\"initial value: stretch\\\"\\n  },\\n  \\\"align-items: baseline\\\": {\\n    \\\"prefix\\\": \\\"aib\\\",\\n    \\\"body\\\": \\\"align-items: baseline;\\\"\\n  },\\n  \\\"align-items: center\\\": {\\n    \\\"prefix\\\": \\\"aic\\\",\\n    \\\"body\\\": \\\"align-items: center;\\\"\\n  },\\n  \\\"align-items: flex-start\\\": {\\n    \\\"prefix\\\": \\\"aifs\\\",\\n    \\\"body\\\": \\\"align-items: flex-start;\\\"\\n  },\\n  \\\"align-items: flex-end\\\": {\\n    \\\"prefix\\\": \\\"aife\\\",\\n    \\\"body\\\": \\\"align-items: flex-end;\\\"\\n  },\\n  \\\"align-items: stretch\\\": {\\n    \\\"prefix\\\": \\\"ais\\\",\\n    \\\"body\\\": \\\"align-items: stretch;\\\"\\n  },\\n  \\\"align-self\\\": {\\n    \\\"prefix\\\": \\\"as\\\",\\n    \\\"body\\\": \\\"align-items: ${1|flex-start,flex-end,center,baseline,stretch,auto|};\\\",\\n    \\\"description\\\": \\\"initial value: auto\\\"\\n  },\\n  \\\"animation\\\": {\\n    \\\"prefix\\\": \\\"ani\\\",\\n    \\\"body\\\": \\\"animation: ${1:name} ${2:1s} ${3|linear,ease-in-out,ease,ease-in,ease-out,step-start,step-end,steps,cubic-bezier|};\\\",\\n    \\\"description\\\": \\\"animation: name duration timing-function delay direction count fill-mode play-state\\\"\\n  },\\n  \\\"animation-delay\\\": {\\n    \\\"prefix\\\": \\\"anide\\\",\\n    \\\"body\\\": \\\"animation-delay: ${0:1s};\\\"\\n  },\\n  \\\"animation-direction\\\": {\\n    \\\"prefix\\\": \\\"anidi\\\",\\n    \\\"body\\\": \\\"animation-direction: ${1|alternate,alternate-reverse,reverse,normal|};\\\",\\n    \\\"description\\\": \\\"initial value: normal\\\"\\n  },\\n  \\\"animation-duratuion\\\": {\\n    \\\"prefix\\\": \\\"anidu\\\",\\n    \\\"body\\\": \\\"animation-duration: ${0:1s};\\\"\\n  },\\n  \\\"animation-fill-mode\\\": {\\n    \\\"prefix\\\": \\\"anifm\\\",\\n    \\\"body\\\": \\\"animation-fill-mode: ${1|forwards,backwards,both,none|};\\\",\\n    \\\"description\\\": \\\"initial value: none\\\"\\n  },\\n  \\\"animation-iteration-count\\\": {\\n    \\\"prefix\\\": \\\"aniic\\\",\\n    \\\"body\\\": \\\"animation-iteration-count: ${0:infinite};\\\",\\n    \\\"description\\\": \\\"initial value: 1\\\"\\n  },\\n  \\\"animation-name\\\": {\\n    \\\"prefix\\\": \\\"anin\\\",\\n    \\\"body\\\": \\\"animation-name: ${0:name};\\\"\\n  },\\n  \\\"animation-play-state\\\": {\\n    \\\"prefix\\\": \\\"anips\\\",\\n    \\\"body\\\": \\\"animation-play-state: ${1|paused,running|};\\\",\\n    \\\"description\\\": \\\"initial value: running\\\"\\n  },\\n  \\\"animation-timing-function\\\": {\\n    \\\"prefix\\\": \\\"anitf\\\",\\n    \\\"body\\\": \\\"animation-timing-function: ${1|linear,ease,ease-in-out,ease-in,ease-out,step-start,step-end,steps,cubic-bezier|};\\\",\\n    \\\"description\\\": \\\"initial value: ease\\\"\\n  },\\n  \\\"background\\\": {\\n    \\\"prefix\\\": \\\"bg\\\",\\n    \\\"body\\\": \\\"background: ${0:#fff};\\\",\\n    \\\"description\\\": \\\"background: image position/size repeat attachment box box\\\"\\n  },\\n  \\\"background-attachment\\\": {\\n    \\\"prefix\\\": \\\"bga\\\",\\n    \\\"body\\\": \\\"background-attachment: ${1|fixed,scroll,local|};\\\",\\n    \\\"description\\\": \\\"initial value: scroll\\\"\\n  },\\n  \\\"background-color\\\": {\\n    \\\"prefix\\\": \\\"bgc\\\",\\n    \\\"body\\\": \\\"background-color: ${0:#fff};\\\"\\n  },\\n  \\\"background-clip\\\": {\\n    \\\"prefix\\\": \\\"bgcl\\\",\\n    \\\"body\\\": \\\"background-clip: ${1|border-box,padding-box,content-box,text|};\\\",\\n    \\\"description\\\": \\\"initial value: border-box\\\"\\n  },\\n  \\\"background-image\\\": {\\n    \\\"prefix\\\": \\\"bgi\\\",\\n    \\\"body\\\": \\\"background-image: url('${0:background.jpg}');\\\"\\n  },\\n  \\\"background-origin\\\": {\\n    \\\"prefix\\\": \\\"bgo\\\",\\n    \\\"body\\\": \\\"background-origin: ${1|border-box,padding-box,content-box|};\\\",\\n    \\\"description\\\": \\\"initial value: padding-box\\\"\\n  },\\n  \\\"background-position\\\": {\\n    \\\"prefix\\\": \\\"bgp\\\",\\n    \\\"body\\\": \\\"background-position: ${1:left} ${2:top};\\\"\\n  },\\n  \\\"background-repeat\\\": {\\n    \\\"prefix\\\": \\\"bgr\\\",\\n    \\\"body\\\": \\\"background-repeat: ${1|no-repeat,repeat-x,repeat-y,repeat,space,round|};\\\",\\n    \\\"description\\\": \\\"initial value: repeat\\\"\\n  },\\n  \\\"background-repeat: repeat\\\": {\\n    \\\"prefix\\\": \\\"bgrr\\\",\\n    \\\"body\\\": \\\"background-repeat: repeat;\\\"\\n  },\\n  \\\"background-repeat: repeat-x\\\": {\\n    \\\"prefix\\\": \\\"bgrx\\\",\\n    \\\"body\\\": \\\"background-repeat: repeat-x;\\\"\\n  },\\n  \\\"background-repeat: repeat-y\\\": {\\n    \\\"prefix\\\": \\\"bgry\\\",\\n    \\\"body\\\": \\\"background-repeat: repeat-y;\\\"\\n  },\\n  \\\"background-repeat: no-repeat\\\": {\\n    \\\"prefix\\\": \\\"bgrn\\\",\\n    \\\"body\\\": \\\"background-repeat: no-repeat;\\\"\\n  },\\n  \\\"background-size\\\": {\\n    \\\"prefix\\\": \\\"bgs\\\",\\n    \\\"body\\\": \\\"background-size: ${0:cover};\\\"\\n  },\\n  \\\"border\\\": {\\n    \\\"prefix\\\": \\\"bor\\\",\\n    \\\"body\\\": \\\"border: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};\\\"\\n  },\\n  \\\"border: none\\\": {\\n    \\\"prefix\\\": \\\"born\\\",\\n    \\\"body\\\": \\\"border: none;\\\"\\n  },\\n  \\\"border-color\\\": {\\n    \\\"prefix\\\": \\\"borc\\\",\\n    \\\"body\\\": \\\"border-color: ${0:#000};\\\"\\n  },\\n  \\\"border-style\\\": {\\n    \\\"prefix\\\": \\\"bors\\\",\\n    \\\"body\\\": \\\"border-style: ${1|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|};\\\"\\n  },\\n  \\\"border-width\\\": {\\n    \\\"prefix\\\": \\\"borw\\\",\\n    \\\"body\\\": \\\"border-width: ${0:1px};\\\"\\n  },\\n  \\\"border-bottom\\\": {\\n    \\\"prefix\\\": \\\"borb\\\",\\n    \\\"body\\\": \\\"border-bottom: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};\\\"\\n  },\\n  \\\"border-left\\\": {\\n    \\\"prefix\\\": \\\"borl\\\",\\n    \\\"body\\\": \\\"border-left: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};\\\"\\n  },\\n  \\\"border-right\\\": {\\n    \\\"prefix\\\": \\\"borr\\\",\\n    \\\"body\\\": \\\"border-right: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};\\\"\\n  },\\n  \\\"border-top\\\": {\\n    \\\"prefix\\\": \\\"bort\\\",\\n    \\\"body\\\": \\\"border-top: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};\\\"\\n  },\\n  \\\"border-radius\\\": {\\n    \\\"prefix\\\": \\\"br\\\",\\n    \\\"body\\\": \\\"border-radius: ${0:2px};\\\"\\n  },\\n  \\\"bottom\\\": {\\n    \\\"prefix\\\": \\\"bot\\\",\\n    \\\"body\\\": \\\"bottom: ${0:0};\\\"\\n  },\\n  \\\"box-shadow\\\": {\\n    \\\"prefix\\\": \\\"bos\\\",\\n    \\\"body\\\": \\\"box-shadow: ${1:1px} ${2:1px} ${3:1px} ${4:1px} ${0:rgba(0, 0, 0, .5)};\\\",\\n    \\\"description\\\": \\\"box-shadow: x-offset y-offset blur spread color\\\"\\n  },\\n  \\\"box-sizing\\\": {\\n    \\\"prefix\\\": \\\"boz\\\",\\n    \\\"body\\\": \\\"box-sizing: ${1|border-box,content-box|};\\\",\\n    \\\"description\\\": \\\"initial value: content-box\\\"\\n  },\\n  \\\"clear\\\": {\\n    \\\"prefix\\\": \\\"clr\\\",\\n    \\\"body\\\": \\\"clear: ${1|both,left,right,none|};\\\"\\n  },\\n  \\\"color\\\": {\\n    \\\"prefix\\\": \\\"col\\\",\\n    \\\"body\\\": \\\"color: ${0:#000};\\\"\\n  },\\n  \\\"content\\\": {\\n    \\\"prefix\\\": \\\"con\\\",\\n    \\\"body\\\": \\\"content: '$0';\\\"\\n  },\\n  \\\"cursor\\\": {\\n    \\\"prefix\\\": \\\"cur\\\",\\n    \\\"body\\\": \\\"cursor: ${1|auto,default,alias,cell,copy,crosshair,context-menu,help,grab,grabbing,move,none,no-drop,not-allowed,pointer,progress,e-resize,all-scroll,text,wait,vertical-text,zoom-in,zoom-out|};\\\",\\n    \\\"description\\\": \\\"initial value: auto\\\"\\n  },\\n  \\\"cursor: pointer\\\": {\\n    \\\"prefix\\\": \\\"curp\\\",\\n    \\\"body\\\": \\\"cursor: pointer;\\\"\\n  },\\n  \\\"cursor: default\\\": {\\n    \\\"prefix\\\": \\\"curd\\\",\\n    \\\"body\\\": \\\"cursor: default;\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"prefix\\\": \\\"dis\\\",\\n    \\\"body\\\": \\\"display: ${1|none,block,inline,inline-block,flex,inline-flex,list-item,table,inline-table,table-caption,table-cell,table-row,table-row-group,table-column|};\\\"\\n  },\\n  \\\"display: block\\\": {\\n    \\\"prefix\\\": \\\"disb\\\",\\n    \\\"body\\\": \\\"display: block;\\\"\\n  },\\n  \\\"display: inline-block\\\": {\\n    \\\"prefix\\\": \\\"disi\\\",\\n    \\\"body\\\": \\\"display: inline-block;\\\"\\n  },\\n  \\\"display: none\\\": {\\n    \\\"prefix\\\": \\\"disn\\\",\\n    \\\"body\\\": \\\"display: none;\\\"\\n  },\\n  \\\"display: flex\\\": {\\n    \\\"prefix\\\": \\\"disf\\\",\\n    \\\"body\\\": \\\"display: flex;\\\"\\n  },\\n  \\\"flex\\\": {\\n    \\\"prefix\\\": \\\"flex\\\",\\n    \\\"body\\\": \\\"flex: ${1:1} ${2:1} ${3:auto};\\\",\\n    \\\"description\\\": \\\"flex: grow shrink basis\\\"\\n  },\\n  \\\"flex (alt)\\\": {\\n    \\\"prefix\\\": \\\"fle\\\",\\n    \\\"body\\\": \\\"flex: ${1:1} ${2:1} ${3:auto};\\\"\\n  },\\n  \\\"flex-direction\\\": {\\n    \\\"prefix\\\": \\\"fld\\\",\\n    \\\"body\\\": \\\"flex-direction: ${1|row,row-reverse,column,column-reverse|};\\\",\\n    \\\"description\\\": \\\"initial value: row\\\"\\n  },\\n  \\\"flex-direction: row\\\": {\\n    \\\"prefix\\\": \\\"fldr\\\",\\n    \\\"body\\\": \\\"flex-direction: row;\\\"\\n  },\\n  \\\"flex-direction: column\\\": {\\n    \\\"prefix\\\": \\\"fldc\\\",\\n    \\\"body\\\": \\\"flex-direction: column;\\\"\\n  },\\n  \\\"flex-flow\\\": {\\n    \\\"prefix\\\": \\\"flf\\\",\\n    \\\"body\\\": \\\"flex-flow: ${1|row,row-reverse,column,column-reverse|} ${2|wrap,wrap-reverse,nowrap|};\\\"\\n  },\\n  \\\"flex-wrap\\\": {\\n    \\\"prefix\\\": \\\"flw\\\",\\n    \\\"body\\\": \\\"flex-wrap: ${1|wrap,wrap-reverse,nowrap|};\\\",\\n    \\\"description\\\": \\\"initial value: nowrap\\\"\\n  },\\n  \\\"float\\\": {\\n    \\\"prefix\\\": \\\"fl\\\",\\n    \\\"body\\\": \\\"float: ${1|left,right,none|};\\\"\\n  },\\n  \\\"float: left\\\": {\\n    \\\"prefix\\\": \\\"fll\\\",\\n    \\\"body\\\": \\\"float: left;\\\"\\n  },\\n  \\\"float: right\\\": {\\n    \\\"prefix\\\": \\\"flr\\\",\\n    \\\"body\\\": \\\"float: right;\\\"\\n  },\\n  \\\"float: none\\\": {\\n    \\\"prefix\\\": \\\"fln\\\",\\n    \\\"body\\\": \\\"float: none;\\\"\\n  },\\n  \\\"font-family\\\": {\\n    \\\"prefix\\\": \\\"ff\\\",\\n    \\\"body\\\": \\\"font-family: ${0:arial};\\\"\\n  },\\n  \\\"font-size\\\": {\\n    \\\"prefix\\\": \\\"fz\\\",\\n    \\\"body\\\": \\\"font-size: ${0:12px};\\\"\\n  },\\n  \\\"font-style\\\": {\\n    \\\"prefix\\\": \\\"fst\\\",\\n    \\\"body\\\": \\\"font-style: ${1|italic,oblique,normal|};\\\"\\n  },\\n  \\\"font-style: italic\\\": {\\n    \\\"prefix\\\": \\\"fsti\\\",\\n    \\\"body\\\": \\\"font-style: italic;\\\"\\n  },\\n  \\\"font-style: normal\\\": {\\n    \\\"prefix\\\": \\\"fstn\\\",\\n    \\\"body\\\": \\\"font-style: normal;\\\"\\n  },\\n  \\\"font-style: oblique\\\": {\\n    \\\"prefix\\\": \\\"fsto\\\",\\n    \\\"body\\\": \\\"font-style: oblique;\\\"\\n  },\\n  \\\"font-weight\\\": {\\n    \\\"prefix\\\": \\\"fw\\\",\\n    \\\"body\\\": \\\"font-weight: ${0:bold};\\\"\\n  },\\n  \\\"font-weight: bold\\\": {\\n    \\\"prefix\\\": \\\"fwb\\\",\\n    \\\"body\\\": \\\"font-weight: bold;\\\"\\n  },\\n  \\\"font-weight: light\\\": {\\n    \\\"prefix\\\": \\\"fwl\\\",\\n    \\\"body\\\": \\\"font-weight: light;\\\"\\n  },\\n  \\\"font-weight: normal\\\": {\\n    \\\"prefix\\\": \\\"fwn\\\",\\n    \\\"body\\\": \\\"font-weight: normal;\\\"\\n  },\\n  \\\"font\\\": {\\n    \\\"prefix\\\": \\\"ft\\\",\\n    \\\"body\\\": \\\"font: ${0:12px/1.5};\\\",\\n    \\\"description\\\": \\\"font: [weight style variant stretch] size/line-height family\\\"\\n  },\\n  \\\"height\\\": {\\n    \\\"prefix\\\": \\\"hei\\\",\\n    \\\"body\\\": \\\"height: ${0:1px};\\\"\\n  },\\n  \\\"justify-content\\\": {\\n    \\\"prefix\\\": \\\"jc\\\",\\n    \\\"body\\\": \\\"justify-content: ${1|flex-start,flex-end,center,space-between,space-around|};\\\",\\n    \\\"description\\\": \\\"initial value: flex-start\\\"\\n  },\\n  \\\"justify-content: flex-start\\\": {\\n    \\\"prefix\\\": \\\"jcfs\\\",\\n    \\\"body\\\": \\\"justify-content: flex-start;\\\"\\n  },\\n  \\\"justify-content: flex-end\\\": {\\n    \\\"prefix\\\": \\\"jcfe\\\",\\n    \\\"body\\\": \\\"justify-content: flex-end;\\\"\\n  },\\n  \\\"justify-content: center\\\": {\\n    \\\"prefix\\\": \\\"jcc\\\",\\n    \\\"body\\\": \\\"justify-content: center;\\\"\\n  },\\n  \\\"justify-content: space-around\\\": {\\n    \\\"prefix\\\": \\\"jcsa\\\",\\n    \\\"body\\\": \\\"justify-content: space-around;\\\"\\n  },\\n  \\\"justify-content: space-between\\\": {\\n    \\\"prefix\\\": \\\"jcsb\\\",\\n    \\\"body\\\": \\\"justify-content: space-between;\\\"\\n  },\\n  \\\"list-style\\\": {\\n    \\\"prefix\\\": \\\"lis\\\",\\n    \\\"body\\\": \\\"list-style: ${1|disc,circle,square,decimal,lower-roman,upper-roman,lower-alpha,upper-alpha,none,armenian,cjk-ideographic,georgian,lower-greek,hebrew,hiragana,hiragana-iroha,katakana,katakana-iroha,lower-latin,upper-latin|} ${2|outside,inside|};\\\",\\n    \\\"description\\\": \\\"list-style: type position image\\\"\\n  },\\n  \\\"list-style-position\\\": {\\n    \\\"prefix\\\": \\\"lisp\\\",\\n    \\\"body\\\": \\\"${1|outside,inside|}\\\",\\n    \\\"description\\\": \\\"initial value: outside\\\"\\n  },\\n  \\\"list-style-type\\\": {\\n    \\\"prefix\\\": \\\"list\\\",\\n    \\\"body\\\": \\\"list-style-type: ${1|disc,circle,square,decimal,lower-roman,upper-roman,lower-alpha,upper-alpha,none,armenian,cjk-ideographic,georgian,lower-greek,hebrew,hiragana,hiragana-iroha,katakana,katakana-iroha,lower-latin,upper-latin|};\\\",\\n    \\\"description\\\": \\\"initial value: disc\\\"\\n  },\\n  \\\"list-style-type: circle\\\": {\\n    \\\"prefix\\\": \\\"listc\\\",\\n    \\\"body\\\": \\\"list-style-type: circle;\\\"\\n  },\\n  \\\"list-style-type: disc\\\": {\\n    \\\"prefix\\\": \\\"listd\\\",\\n    \\\"body\\\": \\\"list-style-type: disc;\\\"\\n  },\\n  \\\"list-style-type: none\\\": {\\n    \\\"prefix\\\": \\\"listn\\\",\\n    \\\"body\\\": \\\"list-style-type: none;\\\"\\n  },\\n  \\\"list-style-type: square\\\": {\\n    \\\"prefix\\\": \\\"lists\\\",\\n    \\\"body\\\": \\\"list-style-type: square;\\\"\\n  },\\n  \\\"list-style-type: lower-roman\\\": {\\n    \\\"prefix\\\": \\\"listlr\\\",\\n    \\\"body\\\": \\\"list-style-type: lower-roman;\\\"\\n  },\\n  \\\"list-style-type: upper-roman\\\": {\\n    \\\"prefix\\\": \\\"listur\\\",\\n    \\\"body\\\": \\\"list-style-type: upper-roman;\\\"\\n  },\\n  \\\"left\\\": {\\n    \\\"prefix\\\": \\\"lef\\\",\\n    \\\"body\\\": \\\"left: ${0:0};\\\"\\n  },\\n  \\\"line-height\\\": {\\n    \\\"prefix\\\": \\\"lh\\\",\\n    \\\"body\\\": \\\"line-height: ${0:1.5};\\\"\\n  },\\n  \\\"letter-spacing\\\": {\\n    \\\"prefix\\\": \\\"ls\\\",\\n    \\\"body\\\": \\\"letter-spacing: ${0:2px};\\\"\\n  },\\n  \\\"letter-spacing: normal\\\": {\\n    \\\"prefix\\\": \\\"lsn\\\",\\n    \\\"body\\\": \\\"letter-spacing: normal;\\\"\\n  },\\n  \\\"margin\\\": {\\n    \\\"prefix\\\": \\\"mar\\\",\\n    \\\"body\\\": \\\"margin: ${0:0};\\\"\\n  },\\n  \\\"margin-bottom\\\": {\\n    \\\"prefix\\\": \\\"marb\\\",\\n    \\\"body\\\": \\\"margin-bottom: ${0:0};\\\"\\n  },\\n  \\\"margin-left\\\": {\\n    \\\"prefix\\\": \\\"marl\\\",\\n    \\\"body\\\": \\\"margin-left: ${0:0};\\\"\\n  },\\n  \\\"margin-right\\\": {\\n    \\\"prefix\\\": \\\"marr\\\",\\n    \\\"body\\\": \\\"margin-right: ${0:0};\\\"\\n  },\\n  \\\"margin-top\\\": {\\n    \\\"prefix\\\": \\\"mart\\\",\\n    \\\"body\\\": \\\"margin-top: ${0:0};\\\"\\n  },\\n  \\\"margin: 0 auto\\\": {\\n    \\\"prefix\\\": \\\"mara\\\",\\n    \\\"body\\\": \\\"margin: 0 auto;\\\"\\n  },\\n  \\\"min-height\\\": {\\n    \\\"prefix\\\": \\\"mih\\\",\\n    \\\"body\\\": \\\"min-height: ${0:1px};\\\"\\n  },\\n  \\\"min-width\\\": {\\n    \\\"prefix\\\": \\\"miw\\\",\\n    \\\"body\\\": \\\"min-width: ${0:1px};\\\"\\n  },\\n  \\\"max-height\\\": {\\n    \\\"prefix\\\": \\\"mah\\\",\\n    \\\"body\\\": \\\"max-height: ${0:1px};\\\"\\n  },\\n  \\\"max-width\\\": {\\n    \\\"prefix\\\": \\\"maw\\\",\\n    \\\"body\\\": \\\"max-width: ${0:1px};\\\"\\n  },\\n  \\\"opacity\\\": {\\n    \\\"prefix\\\": \\\"opa\\\",\\n    \\\"body\\\": \\\"opacity: ${0:0};\\\"\\n  },\\n  \\\"overflow\\\": {\\n    \\\"prefix\\\": \\\"ov\\\",\\n    \\\"body\\\": \\\"overflow: ${1|visible,hidden,scroll,auto,clip|};\\\"\\n  },\\n  \\\"overflow: auto\\\": {\\n    \\\"prefix\\\": \\\"ova\\\",\\n    \\\"body\\\": \\\"overflow: auto;\\\"\\n  },\\n  \\\"overflow: hidden\\\": {\\n    \\\"prefix\\\": \\\"ovh\\\",\\n    \\\"body\\\": \\\"overflow: hidden;\\\"\\n  },\\n  \\\"overflow: scroll\\\": {\\n    \\\"prefix\\\": \\\"ovs\\\",\\n    \\\"body\\\": \\\"overflow: scroll;\\\"\\n  },\\n  \\\"overflow: visible\\\": {\\n    \\\"prefix\\\": \\\"ovv\\\",\\n    \\\"body\\\": \\\"overflow: visible;\\\"\\n  },\\n  \\\"padding\\\": {\\n    \\\"prefix\\\": \\\"pad\\\",\\n    \\\"body\\\": \\\"padding: ${0:0};\\\"\\n  },\\n  \\\"padding-bottom\\\": {\\n    \\\"prefix\\\": \\\"padb\\\",\\n    \\\"body\\\": \\\"padding-bottom: ${0:0};\\\"\\n  },\\n  \\\"padding-left\\\": {\\n    \\\"prefix\\\": \\\"padl\\\",\\n    \\\"body\\\": \\\"padding-left: ${0:0};\\\"\\n  },\\n  \\\"padding-right\\\": {\\n    \\\"prefix\\\": \\\"padr\\\",\\n    \\\"body\\\": \\\"padding-right: ${0:0};\\\"\\n  },\\n  \\\"padding-top\\\": {\\n    \\\"prefix\\\": \\\"padt\\\",\\n    \\\"body\\\": \\\"padding-top: ${0:0};\\\"\\n  },\\n  \\\"position\\\": {\\n    \\\"prefix\\\": \\\"pos\\\",\\n    \\\"body\\\": \\\"position: ${1|relative,absolute,fixed,sticky,static|};\\\"\\n  },\\n  \\\"position absolute\\\": {\\n    \\\"prefix\\\": \\\"posa\\\",\\n    \\\"body\\\": \\\"position: absolute;\\\"\\n  },\\n  \\\"position fixed\\\": {\\n    \\\"prefix\\\": \\\"posf\\\",\\n    \\\"body\\\": \\\"position: fixed;\\\"\\n  },\\n  \\\"position relative\\\": {\\n    \\\"prefix\\\": \\\"posr\\\",\\n    \\\"body\\\": \\\"position: relative;\\\"\\n  },\\n  \\\"position sticky\\\": {\\n    \\\"prefix\\\": \\\"poss\\\",\\n    \\\"body\\\": \\\"position: sticky;\\\"\\n  },\\n  \\\"right\\\": {\\n    \\\"prefix\\\": \\\"rig\\\",\\n    \\\"body\\\": \\\"right: ${0:0};\\\"\\n  },\\n  \\\"text-align\\\": {\\n    \\\"prefix\\\": \\\"ta\\\",\\n    \\\"body\\\": \\\"text-align: ${1|center,left,right,justify,start,end|};\\\"\\n  },\\n  \\\"text-align: center\\\": {\\n    \\\"prefix\\\": \\\"tac\\\",\\n    \\\"body\\\": \\\"text-align: center;\\\"\\n  },\\n  \\\"text-align: left\\\": {\\n    \\\"prefix\\\": \\\"tal\\\",\\n    \\\"body\\\": \\\"text-align: left;\\\"\\n  },\\n  \\\"text-align: right\\\": {\\n    \\\"prefix\\\": \\\"tar\\\",\\n    \\\"body\\\": \\\"text-align: right;\\\"\\n  },\\n  \\\"text-decoration\\\": {\\n    \\\"prefix\\\": \\\"td\\\",\\n    \\\"body\\\": \\\"text-decoration: ${1|none,underline,overline,line-through|};\\\"\\n  },\\n  \\\"text-decoration: underline\\\": {\\n    \\\"prefix\\\": \\\"tdu\\\",\\n    \\\"body\\\": \\\"text-decoration: underline;\\\"\\n  },\\n  \\\"text-decoration: none\\\": {\\n    \\\"prefix\\\": \\\"tdn\\\",\\n    \\\"body\\\": \\\"text-decoration: none;\\\"\\n  },\\n  \\\"text-decoration: line-through\\\": {\\n    \\\"prefix\\\": \\\"tdl\\\",\\n    \\\"body\\\": \\\"text-decoration: line-through;\\\"\\n  },\\n  \\\"text-indent\\\": {\\n    \\\"prefix\\\": \\\"ti\\\",\\n    \\\"body\\\": \\\"text-indent: ${0:2em};\\\"\\n  },\\n  \\\"text-shadow\\\": {\\n    \\\"prefix\\\": \\\"ts\\\",\\n    \\\"body\\\": \\\"text-shadow: ${1:1px} ${2:1px} ${3:1px} ${4:1px} ${0:rgba(0, 0, 0, .5)};\\\",\\n    \\\"description\\\": \\\"text-shadow: x-offset y-offset blur spread color\\\"\\n  },\\n  \\\"text-transform\\\": {\\n    \\\"prefix\\\": \\\"tt\\\",\\n    \\\"body\\\": \\\"text-transform: ${1|capitalize,uppercase,lowercase,full-width,none|};\\\"\\n  },\\n  \\\"top\\\": {\\n    \\\"prefix\\\": \\\"top\\\",\\n    \\\"body\\\": \\\"top: ${0:0};\\\"\\n  },\\n  \\\"vertical-align\\\": {\\n    \\\"prefix\\\": \\\"va\\\",\\n    \\\"body\\\": \\\"vertical-align: ${1|baseline,middle,top,bottom,sub,super,text-top,text-bottom|};\\\"\\n  },\\n  \\\"vertical-align: bottom\\\": {\\n    \\\"prefix\\\": \\\"vab\\\",\\n    \\\"body\\\": \\\"vertical-align: bottom;\\\"\\n  },\\n  \\\"vertical-align: middle\\\": {\\n    \\\"prefix\\\": \\\"vam\\\",\\n    \\\"body\\\": \\\"vertical-align: middle;\\\"\\n  },\\n  \\\"vertical-align: top\\\": {\\n    \\\"prefix\\\": \\\"vat\\\",\\n    \\\"body\\\": \\\"vertical-align: top;\\\"\\n  },\\n  \\\"visibility\\\": {\\n    \\\"prefix\\\": \\\"vis\\\",\\n    \\\"body\\\": \\\"visibility: ${1|visible,hidden,collapse|};\\\"\\n  },\\n  \\\"visibility: visible\\\": {\\n    \\\"prefix\\\": \\\"visv\\\",\\n    \\\"body\\\": \\\"visibility: visible;\\\"\\n  },\\n  \\\"visibility: hidden\\\": {\\n    \\\"prefix\\\": \\\"vish\\\",\\n    \\\"body\\\": \\\"visibility: hidden;\\\"\\n  },\\n  \\\"word-break\\\": {\\n    \\\"prefix\\\": \\\"wb\\\",\\n    \\\"body\\\": \\\"word-break: ${1|break-all,keep-all,break-word,normal|};\\\"\\n  },\\n  \\\"width\\\": {\\n    \\\"prefix\\\": \\\"wid\\\",\\n    \\\"body\\\": \\\"width: ${0:0};\\\"\\n  },\\n  \\\"width: auto\\\": {\\n    \\\"prefix\\\": \\\"wida\\\",\\n    \\\"body\\\": \\\"width: auto;\\\"\\n  },\\n  \\\"white-space\\\": {\\n    \\\"prefix\\\": \\\"ws\\\",\\n    \\\"body\\\": \\\"white-space: ${1|nowrap,pre,pre-wrap,pre-line,normal|};\\\"\\n  },\\n  \\\"white-space: nowrap\\\": {\\n    \\\"prefix\\\": \\\"wsn\\\",\\n    \\\"body\\\": \\\"white-space: nowrap;\\\"\\n  },\\n  \\\"white-space: pre\\\": {\\n    \\\"prefix\\\": \\\"wsp\\\",\\n    \\\"body\\\": \\\"white-space: pre;\\\"\\n  },\\n  \\\"word-wrap\\\": {\\n    \\\"prefix\\\": \\\"ww\\\",\\n    \\\"body\\\": \\\"word-wrap: ${1|break-word,break-spaces,normal|};\\\"\\n  },\\n  \\\"z-index\\\": {\\n    \\\"prefix\\\": \\\"zi\\\",\\n    \\\"body\\\": \\\"z-index: ${0:-1};\\\"\\n  },\\n  \\\"@import\\\": {\\n    \\\"prefix\\\": \\\"imp\\\",\\n    \\\"body\\\": \\\"@import '${0:filename}';\\\"\\n  },\\n  \\\"@mixin\\\": {\\n    \\\"prefix\\\": \\\"mix\\\",\\n    \\\"body\\\": \\\"@mixin ${1:name} {\\\\n  $0\\\\n}\\\"\\n  },\\n  \\\"@include\\\": {\\n    \\\"prefix\\\": \\\"inc\\\",\\n    \\\"body\\\": \\\"@include ${0:mixin};\\\"\\n  },\\n  \\\"@keyframes\\\": {\\n    \\\"prefix\\\": \\\"key\\\",\\n    \\\"body\\\": \\\"@keyframes ${1:name} {\\\\n  $0\\\\n}\\\"\\n  },\\n  \\\"@media\\\": {\\n    \\\"prefix\\\": \\\"med\\\",\\n    \\\"body\\\": \\\"@media screen and (${1:max-width: 300px}) {\\\\n  $0\\\\n}\\\"\\n  },\\n  \\\"!important\\\": {\\n    \\\"prefix\\\": \\\"!\\\",\\n    \\\"body\\\": \\\"!important\\\"\\n  },\\n  \\\"!important (alt)\\\": {\\n    \\\"prefix\\\": \\\"i\\\",\\n    \\\"body\\\": \\\"!important\\\"\\n  }\\n}\\n\",\"csharp.json\":\"{\\n  \\\"Attribute using recommended pattern\\\": {\\n    \\\"prefix\\\": \\\"attribute\\\",\\n    \\\"body\\\": [\\n      \\\"[System.AttributeUsage(System.AttributeTargets.${1:All}, Inherited = ${2:false}, AllowMultiple = ${3:true})]\\\",\\n      \\\"sealed class ${4:My}Attribute : System.Attribute\\\",\\n      \\\"{\\\",\\n      \\\"    // See the attribute guidelines at\\\",\\n      \\\"    //  http://go.microsoft.com/fwlink/?LinkId=85236\\\",\\n      \\\"    readonly string positionalString;\\\",\\n      \\\"    \\\",\\n      \\\"    // This is a positional argument\\\",\\n      \\\"    public ${4:My}Attribute(string positionalString)\\\",\\n      \\\"    {\\\",\\n      \\\"        this.positionalString = positionalString;\\\",\\n      \\\"        \\\",\\n      \\\"        // TODO: Implement code here\\\",\\n      \\\"        ${5:throw new System.NotImplementedException();}\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    public string PositionalString\\\",\\n      \\\"    {\\\",\\n      \\\"        get { return positionalString; }\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    // This is a named argument\\\",\\n      \\\"    public int NamedInt { get; set; }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Attribute using recommended pattern\\\"\\n  },\\n  \\\"Checked block\\\": {\\n    \\\"prefix\\\": \\\"checked\\\",\\n    \\\"body\\\": [\\\"checked\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Checked block\\\"\\n  },\\n  \\\"Class\\\": {\\n    \\\"prefix\\\": \\\"class\\\",\\n    \\\"body\\\": [\\\"class ${1:Name}\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Class\\\"\\n  },\\n  \\\"Console.WriteLine\\\": {\\n    \\\"prefix\\\": \\\"cw\\\",\\n    \\\"body\\\": [\\\"System.Console.WriteLine($0);\\\"],\\n    \\\"description\\\": \\\"Console.WriteLine\\\"\\n  },\\n  \\\"do...while loop\\\": {\\n    \\\"prefix\\\": \\\"do\\\",\\n    \\\"body\\\": [\\\"do\\\", \\\"{\\\", \\\"    $0\\\", \\\"} while (${1:true});\\\"],\\n    \\\"description\\\": \\\"do...while loop\\\"\\n  },\\n  \\\"Else statement\\\": {\\n    \\\"prefix\\\": \\\"else\\\",\\n    \\\"body\\\": [\\\"else\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Else statement\\\"\\n  },\\n  \\\"Enum\\\": {\\n    \\\"prefix\\\": \\\"enum\\\",\\n    \\\"body\\\": [\\\"enum ${1:Name}\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Enum\\\"\\n  },\\n  \\\"Implementing Equals() according to guidelines\\\": {\\n    \\\"prefix\\\": \\\"equals\\\",\\n    \\\"body\\\": [\\n      \\\"// override object.Equals\\\",\\n      \\\"public override bool Equals(object obj)\\\",\\n      \\\"{\\\",\\n      \\\"    //\\\",\\n      \\\"    // See the full list of guidelines at\\\",\\n      \\\"    //   http://go.microsoft.com/fwlink/?LinkID=85237\\\",\\n      \\\"    // and also the guidance for operator== at\\\",\\n      \\\"    //   http://go.microsoft.com/fwlink/?LinkId=85238\\\",\\n      \\\"    //\\\",\\n      \\\"    \\\",\\n      \\\"    if (obj == null || GetType() != obj.GetType())\\\",\\n      \\\"    {\\\",\\n      \\\"        return false;\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    // TODO: write your implementation of Equals() here\\\",\\n      \\\"    ${1:throw new System.NotImplementedException();}\\\",\\n      \\\"    return base.Equals (obj);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// override object.GetHashCode\\\",\\n      \\\"public override int GetHashCode()\\\",\\n      \\\"{\\\",\\n      \\\"    // TODO: write your implementation of GetHashCode() here\\\",\\n      \\\"    ${2:throw new System.NotImplementedException();}\\\",\\n      \\\"    return base.GetHashCode();\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Implementing Equals() according to guidelines\\\"\\n  },\\n  \\\"Exception\\\": {\\n    \\\"prefix\\\": \\\"exception\\\",\\n    \\\"body\\\": [\\n      \\\"[System.Serializable]\\\",\\n      \\\"public class ${1:My}Exception : ${2:System.Exception}\\\",\\n      \\\"{\\\",\\n      \\\"    public ${1:My}Exception() { }\\\",\\n      \\\"    public ${1:My}Exception(string message) : base(message) { }\\\",\\n      \\\"    public ${1:My}Exception(string message, System.Exception inner) : base(message, inner) { }\\\",\\n      \\\"    protected ${1:My}Exception(\\\",\\n      \\\"        System.Runtime.Serialization.SerializationInfo info,\\\",\\n      \\\"        System.Runtime.Serialization.StreamingContext context) : base(info, context) { }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Exception\\\"\\n  },\\n  \\\"Foreach statement\\\": {\\n    \\\"prefix\\\": \\\"foreach\\\",\\n    \\\"body\\\": [\\n      \\\"foreach (${1:var} ${2:item} in ${3:collection})\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Foreach statement\\\"\\n  },\\n  \\\"Reverse for loop\\\": {\\n    \\\"prefix\\\": \\\"forr\\\",\\n    \\\"body\\\": [\\n      \\\"for (int ${1:i} = ${2:length} - 1; ${1:i} >= 0 ; ${1:i}--)\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Reverse for loop\\\"\\n  },\\n  \\\"for loop\\\": {\\n    \\\"prefix\\\": \\\"for\\\",\\n    \\\"body\\\": [\\n      \\\"for (int ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++)\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"for loop\\\"\\n  },\\n  \\\"if statement\\\": {\\n    \\\"prefix\\\": \\\"if\\\",\\n    \\\"body\\\": [\\\"if (${1:true})\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"if statement\\\"\\n  },\\n  \\\"else-if statement\\\": {\\n    \\\"prefix\\\": \\\"else if\\\",\\n    \\\"body\\\": [\\\"else if (${1:true})\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"else-if statement\\\"\\n  },\\n  \\\"Indexer\\\": {\\n    \\\"prefix\\\": \\\"indexer\\\",\\n    \\\"body\\\": [\\n      \\\"${1:public} ${2:object} this[${3:int} index]\\\",\\n      \\\"{\\\",\\n      \\\"    get { $4 }\\\",\\n      \\\"    set { $0 }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Indexer\\\"\\n  },\\n  \\\"Interface\\\": {\\n    \\\"prefix\\\": \\\"interface\\\",\\n    \\\"body\\\": [\\\"interface I${1:Name}\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Interface\\\"\\n  },\\n  \\\"Safely invoking an event\\\": {\\n    \\\"prefix\\\": \\\"invoke\\\",\\n    \\\"body\\\": [\\n      \\\"${1:EventHandler} temp = ${2:MyEvent};\\\",\\n      \\\"if (temp != null)\\\",\\n      \\\"{\\\",\\n      \\\"    temp($0);\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Safely invoking an event\\\"\\n  },\\n  \\\"Simple iterator\\\": {\\n    \\\"prefix\\\": \\\"iterator\\\",\\n    \\\"body\\\": [\\n      \\\"public System.Collections.Generic.IEnumerator<${1:ElementType}> GetEnumerator()\\\",\\n      \\\"{\\\",\\n      \\\"    $0throw new System.NotImplementedException();\\\",\\n      \\\"    yield return default(${1:ElementType});\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Simple iterator\\\"\\n  },\\n  \\\"Named iterator/indexer pair using a nested class\\\": {\\n    \\\"prefix\\\": \\\"iterindex\\\",\\n    \\\"body\\\": [\\n      \\\"public ${1:Name}Iterator ${1:Name}\\\",\\n      \\\"{\\\",\\n      \\\"    get\\\",\\n      \\\"    {\\\",\\n      \\\"        return new ${1:Name}Iterator(this);\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"public class ${1:Name}Iterator\\\",\\n      \\\"{\\\",\\n      \\\"    readonly ${2:ClassName} outer;\\\",\\n      \\\"    \\\",\\n      \\\"    internal ${1:Name}Iterator(${2:ClassName} outer)\\\",\\n      \\\"    {\\\",\\n      \\\"        this.outer = outer;\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    // TODO: provide an appropriate implementation here\\\",\\n      \\\"    public int Length { get { return 1; } }\\\",\\n      \\\"    \\\",\\n      \\\"    public ${3:ElementType} this[int index]\\\",\\n      \\\"    {\\\",\\n      \\\"        get\\\",\\n      \\\"        {\\\",\\n      \\\"            //\\\",\\n      \\\"            // TODO: implement indexer here\\\",\\n      \\\"            //\\\",\\n      \\\"            // you have full access to ${2:ClassName} privates\\\",\\n      \\\"            //\\\",\\n      \\\"            ${4:throw new System.NotImplementedException();}\\\",\\n      \\\"            return default(${3:ElementType});\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    public System.Collections.Generic.IEnumerator<${3:ElementType}> GetEnumerator()\\\",\\n      \\\"    {\\\",\\n      \\\"        for (int i = 0; i < this.Length; i++)\\\",\\n      \\\"        {\\\",\\n      \\\"            yield return this[i];\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Named iterator/indexer pair using a nested class\\\"\\n  },\\n  \\\"Lock statement\\\": {\\n    \\\"prefix\\\": \\\"lock\\\",\\n    \\\"body\\\": [\\\"lock (${1:this})\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Lock statement\\\"\\n  },\\n  \\\"MessageBox.Show\\\": {\\n    \\\"prefix\\\": \\\"mbox\\\",\\n    \\\"body\\\": [\\\"System.Windows.Forms.MessageBox.Show(\\\\\\\"${1:Text}\\\\\\\");$0\\\"],\\n    \\\"description\\\": \\\"MessageBox.Show\\\"\\n  },\\n  \\\"Namespace\\\": {\\n    \\\"prefix\\\": \\\"namespace\\\",\\n    \\\"body\\\": [\\\"namespace ${1:Name}\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Namespace\\\"\\n  },\\n  \\\"#if\\\": {\\n    \\\"prefix\\\": \\\"ifd\\\",\\n    \\\"body\\\": [\\\"#if ${1:true}\\\", \\\"    $0\\\", \\\"#endif\\\"],\\n    \\\"description\\\": \\\"#if\\\"\\n  },\\n  \\\"#region\\\": {\\n    \\\"prefix\\\": \\\"region\\\",\\n    \\\"body\\\": [\\\"#region ${1:Name}\\\", \\\"    $0\\\", \\\"#endregion\\\"],\\n    \\\"description\\\": \\\"#region\\\"\\n  },\\n  \\\"Property and backing field\\\": {\\n    \\\"prefix\\\": \\\"propfull\\\",\\n    \\\"body\\\": [\\n      \\\"private ${1:int} ${2:myVar};\\\",\\n      \\\"public ${1:int} ${3:MyProperty}\\\",\\n      \\\"{\\\",\\n      \\\"    get { return ${2:myVar}; }\\\",\\n      \\\"    set { ${2:myVar} = value; }\\\",\\n      \\\"}\\\",\\n      \\\"$0\\\"\\n    ],\\n    \\\"description\\\": \\\"Property and backing field\\\"\\n  },\\n  \\\"propg\\\": {\\n    \\\"prefix\\\": \\\"propg\\\",\\n    \\\"body\\\": [\\\"public ${1:int} ${2:MyProperty} { get; private set; }$0\\\"],\\n    \\\"description\\\": \\\"An automatically implemented property with a 'get' accessor and a private 'set' accessor. C# 3.0 or higher\\\"\\n  },\\n  \\\"prop\\\": {\\n    \\\"prefix\\\": \\\"prop\\\",\\n    \\\"body\\\": [\\\"public ${1:int} ${2:MyProperty} { get; set; }$0\\\"],\\n    \\\"description\\\": \\\"An automatically implemented property. C# 3.0 or higher\\\"\\n  },\\n  \\\"sim\\\": {\\n    \\\"prefix\\\": \\\"sim\\\",\\n    \\\"body\\\": [\\n      \\\"static int Main(string[] args)\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"    return 0;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"int Main()\\\"\\n  },\\n  \\\"Struct\\\": {\\n    \\\"prefix\\\": \\\"struct\\\",\\n    \\\"body\\\": [\\\"struct ${1:Name}\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Struct\\\"\\n  },\\n  \\\"svm\\\": {\\n    \\\"prefix\\\": \\\"svm\\\",\\n    \\\"body\\\": [\\\"static void Main(string[] args)\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"void Main()\\\"\\n  },\\n  \\\"Switch statement\\\": {\\n    \\\"prefix\\\": \\\"switch\\\",\\n    \\\"body\\\": [\\\"switch (${1:switch_on})\\\", \\\"{\\\", \\\"    $0\\\", \\\"    default:\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Switch statement\\\"\\n  },\\n  \\\"Try finally\\\": {\\n    \\\"prefix\\\": \\\"tryf\\\",\\n    \\\"body\\\": [\\\"try\\\", \\\"{\\\", \\\"    $1\\\", \\\"}\\\", \\\"finally\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Try finally\\\"\\n  },\\n  \\\"Try catch\\\": {\\n    \\\"prefix\\\": \\\"try\\\",\\n    \\\"body\\\": [\\n      \\\"try\\\",\\n      \\\"{\\\",\\n      \\\"    $1\\\",\\n      \\\"}\\\",\\n      \\\"catch (${2:System.Exception})\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"    throw;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Try catch\\\"\\n  },\\n  \\\"Unchecked block\\\": {\\n    \\\"prefix\\\": \\\"unchecked\\\",\\n    \\\"body\\\": [\\\"unchecked\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Unchecked block\\\"\\n  },\\n  \\\"Unsafe statement\\\": {\\n    \\\"prefix\\\": \\\"unsafe\\\",\\n    \\\"body\\\": [\\\"unsafe\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Unsafe statement\\\"\\n  },\\n  \\\"Using statement\\\": {\\n    \\\"prefix\\\": \\\"using\\\",\\n    \\\"body\\\": [\\\"using (${1:resource})\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Using statement\\\"\\n  },\\n  \\\"While loop\\\": {\\n    \\\"prefix\\\": \\\"while\\\",\\n    \\\"body\\\": [\\\"while (${1:true})\\\", \\\"{\\\", \\\"    $0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"While loop\\\"\\n  },\\n  \\\"constructor\\\": {\\n    \\\"prefix\\\": \\\"ctor\\\",\\n    \\\"body\\\": [\\n      \\\"${1:public} ${2:$TM_FILENAME_BASE}(${3:Parameters})\\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"constructor\\\"\\n  },\\n  \\\"xUnit Test\\\": {\\n    \\\"prefix\\\": \\\"fact\\\",\\n    \\\"body\\\": [\\n      \\\"[Fact]\\\",\\n      \\\"public void ${1:TestName}()\\\",\\n      \\\"{\\\",\\n      \\\"//Given\\\",\\n      \\\"\\\",\\n      \\\"//When\\\",\\n      \\\"\\\",\\n      \\\"//Then\\\",\\n      \\\"}$0\\\"\\n    ],\\n    \\\"description\\\": \\\"create xunit test method\\\"\\n  },\\n  \\\"Creates a Method structure\\\": {\\n    \\\"prefix\\\": \\\"method\\\",\\n    \\\"body\\\": [\\n      \\\"${1:public} ${2:void} ${3:MyMethod}(${4:string} ${5:parameter})\\\",\\n      \\\"{\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Creates a Method structure\\\"\\n  },\\n  \\\"Creates an Async Method structure\\\": {\\n    \\\"prefix\\\": \\\"method_async\\\",\\n    \\\"body\\\": [\\n      \\\"${1:public} async ${2:Task}<${3:object}> ${4:MyMethodAsync}(${5:string} ${6:parameter})\\\",\\n      \\\"{\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Creates an async Method structure\\\"\\n  },\\n  \\\"cls\\\": {\\n    \\\"prefix\\\": \\\"cls\\\",\\n    \\\"body\\\": [\\\"${1:public} class ${2:$TM_FILENAME_BASE}\\\", \\\"{\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Create new class\\\"\\n  }\\n}\\n\",\"cpp.json\":\"{\\n  \\\"for\\\": {\\n    \\\"prefix\\\": \\\"for\\\",\\n    \\\"body\\\": [\\n      \\\"for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for 'for' loop\\\"\\n  },\\n  \\\"forr\\\": {\\n    \\\"prefix\\\": \\\"forr\\\",\\n    \\\"body\\\": [\\n      \\\"for (${1:size_t} ${2:i} = ${3:length} - 1; $2 >= ${4:0}; $2--) {\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for reverse 'for' loop\\\"\\n  },\\n  \\\"do\\\": {\\n    \\\"prefix\\\": \\\"do\\\",\\n    \\\"body\\\": [\\\"do {\\\", \\\"\\\\t$0\\\", \\\"} while($1);\\\"],\\n    \\\"description\\\": \\\"Code snippet for do...while loop\\\"\\n  },\\n  \\\"while\\\": {\\n    \\\"prefix\\\": \\\"while\\\",\\n    \\\"body\\\": [\\\"while ($1) {\\\", \\\"\\\\t$2\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"foreach\\\": {\\n    \\\"prefix\\\": \\\"foreach\\\",\\n    \\\"body\\\": [\\n      \\\"for(${1:auto} ${2:var} : ${3:collection_to_loop}) {\\\",\\n      \\\"\\\\t$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for range-based for loop (c++11) statement\\\"\\n  },\\n  \\\"if\\\": {\\n    \\\"prefix\\\": \\\"if\\\",\\n    \\\"body\\\": [\\\"if ($1) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Code snippet for if statement\\\"\\n  },\\n  \\\"else\\\": {\\n    \\\"prefix\\\": \\\"else\\\",\\n    \\\"body\\\": [\\\"else {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Code snippet for else statement\\\"\\n  },\\n  \\\"else if\\\": {\\n    \\\"prefix\\\": \\\"else if\\\",\\n    \\\"body\\\": [\\\"else if ($1) {\\\", \\\"\\\\t$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Code snippet for else-if statement\\\"\\n  },\\n  \\\"enum\\\": {\\n    \\\"prefix\\\": \\\"enum\\\",\\n    \\\"body\\\": [\\\"enum ${1:MyEnum} {\\\", \\\"\\\\t$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Code snippet for enum\\\"\\n  },\\n  \\\"enum class\\\": {\\n    \\\"prefix\\\": \\\"enum class\\\",\\n    \\\"body\\\": [\\\"enum class ${1:MyClass} {$0};\\\"],\\n    \\\"description\\\": \\\"Code snippet for enum class (c++11)\\\"\\n  },\\n  \\\"class\\\": {\\n    \\\"prefix\\\": \\\"class\\\",\\n    \\\"body\\\": [\\n      \\\"class ${1:MyClass} {\\\",\\n      \\\"public:\\\",\\n      \\\"\\\\t$1();\\\",\\n      \\\"\\\\t$1($1 &&) = default;\\\",\\n      \\\"\\\\t$1(const $1 &) = default;\\\",\\n      \\\"\\\\t$1 &operator=($1 &&) = default;\\\",\\n      \\\"\\\\t$1 &operator=(const $1 &) = default;\\\",\\n      \\\"\\\\t~$1();\\\",\\n      \\\"\\\",\\n      \\\"private:\\\",\\n      \\\"\\\\t$2\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"$1::$1() {\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"$1::~$1() {\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for class\\\"\\n  },\\n  \\\"eclass\\\": {\\n    \\\"prefix\\\": \\\"eclass\\\",\\n    \\\"body\\\": [\\n      \\\"class ${1:MyClass} {\\\",\\n      \\\"public:\\\",\\n      \\\"\\\\t$2\\\",\\n      \\\"private:\\\",\\n      \\\"\\\\t$3\\\",\\n      \\\"};\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for empty class\\\"\\n  },\\n  \\\"qclass\\\": {\\n    \\\"prefix\\\": \\\"qclass\\\",\\n    \\\"body\\\": [\\n      \\\"class ${1:MyClass} : public QObject {\\\",\\n      \\\"\\\\tQ_OBJECT;\\\",\\n      \\\"public:\\\",\\n      \\\"\\\\nexplicit $1(QObject *parent = nullptr);\\\",\\n      \\\"\\\\t$2\\\",\\n      \\\"signals:\\\",\\n      \\\"\\\",\\n      \\\"public slots:\\\",\\n      \\\"};\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for empty Qt class\\\"\\n  },\\n  \\\"classi\\\": {\\n    \\\"prefix\\\": \\\"classi\\\",\\n    \\\"body\\\": [\\n      \\\"class ${1:MyClass} {\\\",\\n      \\\"public:\\\",\\n      \\\"\\\\t$1() = default;\\\",\\n      \\\"\\\\t$1($1 &&) = default;\\\",\\n      \\\"\\\\t$1(const $1 &) = default;\\\",\\n      \\\"\\\\t$1 &operator=($1 &&) = default;\\\",\\n      \\\"\\\\t$1 &operator=(const $1 &) = default;\\\",\\n      \\\"\\\\t~$1() = default;\\\",\\n      \\\"\\\",\\n      \\\"private:\\\",\\n      \\\"\\\\t$2\\\",\\n      \\\"};\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for class with inline constructor/destructor\\\"\\n  },\\n  \\\"interface\\\": {\\n    \\\"prefix\\\": \\\"interface\\\",\\n    \\\"body\\\": [\\\"__interface I${1:Interface} {\\\", \\\"\\\\t$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Code snippet for interface (Visual C++)\\\"\\n  },\\n  \\\"namespace\\\": {\\n    \\\"prefix\\\": \\\"namespace\\\",\\n    \\\"body\\\": [\\\"namespace ${1:MyNamespace} {\\\", \\\"\\\\t$0\\\", \\\"}\\\"]\\n  },\\n  \\\"#ifdef\\\": {\\n    \\\"prefix\\\": \\\"#ifdef\\\",\\n    \\\"body\\\": [\\\"#ifdef ${1:DEBUG}\\\", \\\"$0\\\", \\\"#endif // ${DEBUG}\\\"],\\n    \\\"description\\\": \\\"Code snippet for #ifdef\\\"\\n  },\\n  \\\"#ifndef\\\": {\\n    \\\"prefix\\\": \\\"#ifndef\\\",\\n    \\\"body\\\": [\\\"#ifndef ${1:DEBUG}\\\", \\\"$0\\\", \\\"#endif // !$1\\\"],\\n    \\\"description\\\": \\\"Code snippet for #ifndef\\\"\\n  },\\n  \\\"#if\\\": {\\n    \\\"prefix\\\": \\\"#if\\\",\\n    \\\"body\\\": [\\\"#if ${1:0}\\\", \\\"$0\\\", \\\"#endif // $1\\\"],\\n    \\\"description\\\": \\\"Code snippet for #if\\\"\\n  },\\n  \\\"struct\\\": {\\n    \\\"prefix\\\": \\\"struct\\\",\\n    \\\"body\\\": [\\\"struct ${1:MyStruct} {\\\", \\\"\\\\t$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Code snippet for struct\\\"\\n  },\\n  \\\"switch\\\": {\\n    \\\"prefix\\\": \\\"switch\\\",\\n    \\\"body\\\": [\\n      \\\"switch (${1:switch_on}) {\\\",\\n      \\\"\\\\tdefault:\\\",\\n      \\\"\\\\t\\\\t$0\\\",\\n      \\\"\\\\t\\\\tbreak;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for switch statement\\\"\\n  },\\n  \\\"try\\\": {\\n    \\\"prefix\\\": \\\"try\\\",\\n    \\\"body\\\": [\\n      \\\"try {\\\",\\n      \\\"\\\\t\\\",\\n      \\\"}\\\",\\n      \\\"catch (const std::exception&) {\\\",\\n      \\\"\\\\t$1\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Code snippet for try catch\\\"\\n  },\\n  \\\"union\\\": {\\n    \\\"prefix\\\": \\\"union\\\",\\n    \\\"body\\\": [\\\"union ${1:MyUnion} {\\\", \\\"\\\\t$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Code snippet for union\\\"\\n  },\\n  \\\"cout\\\": {\\n    \\\"prefix\\\": \\\"cout\\\",\\n    \\\"body\\\": [\\\"std::cout << \\\\\\\"${1:message}\\\\\\\" << std::endl;\\\"],\\n    \\\"description\\\": \\\"Code snippet for printing to std::cout, provided the header is set\\\"\\n  },\\n  \\\"cin\\\": {\\n    \\\"prefix\\\": \\\"cin\\\",\\n    \\\"body\\\": [\\\"std::cin >> $1;\\\"],\\n    \\\"description\\\": \\\"Code snippet for std::cin, provided the header is set\\\"\\n  },\\n  \\\"printf\\\": {\\n    \\\"prefix\\\": \\\"printf\\\",\\n    \\\"body\\\": [\\\"printf(\\\\\\\"$1\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic printf() snippet\\\"\\n  },\\n  \\\"sprintf\\\": {\\n    \\\"prefix\\\": \\\"sprintf\\\",\\n    \\\"body\\\": [\\\"sprintf($1, \\\\\\\"$2\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic sprintf() snippet\\\"\\n  },\\n  \\\"fprintf\\\": {\\n    \\\"prefix\\\": \\\"fprintf\\\",\\n    \\\"body\\\": [\\\"fprintf(${1:stderr}, \\\\\\\"$2\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic fprintf() snippet\\\"\\n  },\\n  \\\"scanf\\\": {\\n    \\\"prefix\\\": \\\"scanf\\\",\\n    \\\"body\\\": [\\\"scanf(\\\\\\\"$1\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic scanf() snippet\\\"\\n  },\\n  \\\"sscanf\\\": {\\n    \\\"prefix\\\": \\\"sscanf\\\",\\n    \\\"body\\\": [\\\"sscanf($1, \\\\\\\"$2\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic sscanf() snippet\\\"\\n  },\\n  \\\"fscanf\\\": {\\n    \\\"prefix\\\": \\\"fscanf\\\",\\n    \\\"body\\\": [\\\"fscanf($1, \\\\\\\"$2\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"Generic fscanf() snippet\\\"\\n  },\\n  \\\"#inc\\\": {\\n    \\\"prefix\\\": \\\"#inc\\\",\\n    \\\"body\\\": [\\\"#include \\\\\\\"$0\\\\\\\"\\\"],\\n    \\\"description\\\": \\\"Code snippet for #include \\\\\\\" \\\\\\\"\\\"\\n  },\\n  \\\"#inc<\\\": {\\n    \\\"prefix\\\": \\\"#inc<\\\",\\n    \\\"body\\\": [\\\"#include <$0>\\\"],\\n    \\\"description\\\": \\\"Code snippet for #include < >\\\"\\n  },\\n  \\\"#def\\\": {\\n    \\\"prefix\\\": \\\"def\\\",\\n    \\\"body\\\": [\\\"#define $0\\\"],\\n    \\\"description\\\": \\\"Code snippet for #define \\\\\\\" \\\\\\\"\\\"\\n  },\\n  \\\"Main function template\\\": {\\n    \\\"prefix\\\": \\\"main\\\",\\n    \\\"body\\\": [\\\"int main (int argc, char *argv[]) {\\\", \\\"\\\\t$1\\\", \\\"\\\\treturn 0;\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"A standard main function for a C++ program\\\"\\n  }\\n}\\n\",\"c.json\":\"{\\n  \\\"Standard Starter Template\\\": {\\n    \\\"prefix\\\": \\\"sst\\\",\\n    \\\"body\\\": [\\n      \\\"#include <stdlib.h>\\\",\\n      \\\"#include <stdio.h>\\\",\\n      \\\"\\\",\\n      \\\"int main(int argc, char *argv[])\\\",\\n      \\\"{$0\\\",\\n      \\\"\\\",\\n      \\\"\\\\treturn EXIT_SUCCESS;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Standard starter template for a tiny C program\\\"\\n  },\\n  \\\"Preprocessor Starter Template\\\": {\\n    \\\"prefix\\\": \\\"sstp\\\",\\n    \\\"body\\\": [\\n      \\\"// #define NDEBUG // disables assert()\\\",\\n      \\\"#include <stdlib.h>\\\",\\n      \\\"#include <stddef.h>\\\",\\n      \\\"#include <stdbool.h>\\\",\\n      \\\"#include <assert.h>\\\",\\n      \\\"#include <errno.h>\\\",\\n      \\\"#include <stdio.h>\\\"\\n    ],\\n    \\\"description\\\": \\\"Preprocessor starter template for a C project\\\"\\n  },\\n  \\\"main() template\\\": {\\n    \\\"prefix\\\": \\\"main\\\",\\n    \\\"body\\\": [\\n      \\\"int main(int argc, char *argv[])\\\",\\n      \\\"{$0\\\",\\n      \\\"\\\",\\n      \\\"\\\\treturn EXIT_SUCCESS;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Standard main() snippet\\\"\\n  },\\n  \\\"main(void) template\\\": {\\n    \\\"prefix\\\": \\\"mainn\\\",\\n    \\\"body\\\": [\\\"int main(void)\\\", \\\"{$0\\\", \\\"\\\", \\\"\\\\treturn EXIT_SUCCESS;\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"No-args main() snippet\\\"\\n  },\\n  \\\"#include <...>\\\": {\\n    \\\"prefix\\\": \\\"#inc\\\",\\n    \\\"body\\\": [\\\"#include <$0>\\\"],\\n    \\\"description\\\": \\\"#include <...> snippet\\\"\\n  },\\n  \\\"#include \\\\\\\"...\\\\\\\"\\\": {\\n    \\\"prefix\\\": \\\"#Inc\\\",\\n    \\\"body\\\": [\\\"#include \\\\\\\"$0\\\\\\\"\\\"],\\n    \\\"description\\\": \\\"#include \\\\\\\"...\\\\\\\" snippet\\\"\\n  },\\n  \\\"#define macro\\\": {\\n    \\\"prefix\\\": \\\"#def\\\",\\n    \\\"body\\\": [\\\"#define ${1:MACRO}\\\"],\\n    \\\"description\\\": \\\"Textual macro snippet\\\"\\n  },\\n  \\\"#define macro()\\\": {\\n    \\\"prefix\\\": \\\"#deff\\\",\\n    \\\"body\\\": [\\\"#define ${1:MACRO}($2) ($3)\\\"],\\n    \\\"description\\\": \\\"Function-like macro snippet\\\"\\n  },\\n  \\\"#if\\\": {\\n    \\\"prefix\\\": \\\"#if\\\",\\n    \\\"body\\\": [\\\"#if ${1:0}\\\", \\\"$0\\\", \\\"#endif /* if $1 */\\\"],\\n    \\\"description\\\": \\\"#if snippet\\\"\\n  },\\n  \\\"#ifdef\\\": {\\n    \\\"prefix\\\": \\\"#ifdef\\\",\\n    \\\"body\\\": [\\\"#ifdef ${1:DEBUG}\\\", \\\"$0\\\", \\\"#endif /* ifdef $1 */\\\"],\\n    \\\"description\\\": \\\"#ifdef snippet\\\"\\n  },\\n  \\\"#ifndef\\\": {\\n    \\\"prefix\\\": \\\"#ifndef\\\",\\n    \\\"body\\\": [\\\"#ifndef ${1:DEBUG}\\\", \\\"$0\\\", \\\"#endif /* ifndef $1 */\\\"],\\n    \\\"description\\\": \\\"#ifndef snippet\\\"\\n  },\\n  \\\"include once\\\": {\\n    \\\"prefix\\\": \\\"once\\\",\\n    \\\"body\\\": [\\n      \\\"#ifndef ${1:FILE}_H\\\",\\n      \\\"#define $1_H\\\",\\n      \\\"$0\\\",\\n      \\\"\\\",\\n      \\\"#endif /* end of include guard: $1_H */\\\"\\n    ],\\n    \\\"description\\\": \\\"Header include guard\\\"\\n  },\\n  \\\"extern C\\\": {\\n    \\\"prefix\\\": \\\"nocpp\\\",\\n    \\\"body\\\": [\\n      \\\"#ifdef __cplusplus\\\",\\n      \\\"extern \\\\\\\"C\\\\\\\" {\\\",\\n      \\\"#endif\\\",\\n      \\\"$0\\\",\\n      \\\"\\\",\\n      \\\"#ifdef __cplusplus\\\",\\n      \\\"} /* extern \\\\\\\"C\\\\\\\" */\\\",\\n      \\\"#endif\\\"\\n    ],\\n    \\\"description\\\": \\\"Disable C++ name mangling in C headers\\\"\\n  },\\n  \\\"#error\\\": {\\n    \\\"prefix\\\": \\\"#err\\\",\\n    \\\"body\\\": [\\\"#error \\\\\\\"$0\\\\\\\"\\\"],\\n    \\\"description\\\": \\\"#error snippet\\\"\\n  },\\n  \\\"#warning\\\": {\\n    \\\"prefix\\\": \\\"#warn\\\",\\n    \\\"body\\\": [\\\"#warning \\\\\\\"$0\\\\\\\"\\\"],\\n    \\\"description\\\": \\\"#warning snippet\\\"\\n  },\\n  \\\"if\\\": {\\n    \\\"prefix\\\": \\\"if\\\",\\n    \\\"body\\\": [\\\"if (${1:true}) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'if' snippet\\\"\\n  },\\n  \\\"if else\\\": {\\n    \\\"prefix\\\": \\\"ife\\\",\\n    \\\"body\\\": [\\\"if (${1:true}) {$2\\\", \\\"} else {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'if' with 'else'\\\"\\n  },\\n  \\\"else\\\": {\\n    \\\"prefix\\\": \\\"el\\\",\\n    \\\"body\\\": [\\\"else {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'else' snippet\\\"\\n  },\\n  \\\"else if\\\": {\\n    \\\"prefix\\\": \\\"elif\\\",\\n    \\\"body\\\": [\\\"else if (${1:true}) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"else-if snippet\\\"\\n  },\\n  \\\"if 1L\\\": {\\n    \\\"prefix\\\": \\\"ifi\\\",\\n    \\\"body\\\": [\\\"if (${1:true}) $0\\\"],\\n    \\\"description\\\": \\\"1-line-if\\\"\\n  },\\n  \\\"elif 1L\\\": {\\n    \\\"prefix\\\": \\\"elifi\\\",\\n    \\\"body\\\": [\\\"else if (${1:true}) $0\\\"],\\n    \\\"description\\\": \\\"1-line-else-if\\\"\\n  },\\n  \\\"ternary\\\": {\\n    \\\"prefix\\\": \\\"t\\\",\\n    \\\"body\\\": [\\\"$1 ? $2 : $0\\\"],\\n    \\\"description\\\": \\\"Ternary operator\\\"\\n  },\\n  \\\"switch\\\": {\\n    \\\"prefix\\\": \\\"switch\\\",\\n    \\\"body\\\": [\\\"switch (${1:expression}) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'switch' snippet\\\"\\n  },\\n  \\\"case\\\": {\\n    \\\"prefix\\\": \\\"case\\\",\\n    \\\"body\\\": [\\\"case ${1:0}:$0\\\"],\\n    \\\"description\\\": \\\"'case' branch\\\"\\n  },\\n  \\\"default\\\": {\\n    \\\"prefix\\\": \\\"default\\\",\\n    \\\"body\\\": [\\\"default:$0\\\"],\\n    \\\"description\\\": \\\"'default' branch\\\"\\n  },\\n  \\\"while\\\": {\\n    \\\"prefix\\\": \\\"while\\\",\\n    \\\"body\\\": [\\\"while (${1:true}) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'while' loop snippet\\\"\\n  },\\n  \\\"do...while\\\": {\\n    \\\"prefix\\\": \\\"do\\\",\\n    \\\"body\\\": [\\\"do {$0\\\", \\\"} while(${1:false});\\\"],\\n    \\\"description\\\": \\\"do...while loop snippet\\\"\\n  },\\n  \\\"return\\\": {\\n    \\\"prefix\\\": \\\"ret\\\",\\n    \\\"body\\\": [\\\"return ${1:0};\\\"],\\n    \\\"description\\\": \\\"'return' snippet\\\"\\n  },\\n  \\\"exit\\\": {\\n    \\\"prefix\\\": \\\"ex\\\",\\n    \\\"body\\\": [\\\"exit($0);\\\"],\\n    \\\"description\\\": \\\"exit() snippet\\\"\\n  },\\n  \\\"for\\\": {\\n    \\\"prefix\\\": \\\"for\\\",\\n    \\\"body\\\": [\\\"for (size_t ${2:i} = 0; $2 < ${1:count}; $2++) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Mostly used 'for' loop\\\"\\n  },\\n  \\\"for custom type\\\": {\\n    \\\"prefix\\\": \\\"fort\\\",\\n    \\\"body\\\": [\\\"for (${1:int} ${2:i} = 0; $2 < ${4:count}; $2++) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Mostly used 'for' loop with custom type\\\"\\n  },\\n  \\\"for non-zero start\\\": {\\n    \\\"prefix\\\": \\\"for1\\\",\\n    \\\"body\\\": [\\n      \\\"for (${1:size_t} ${2:i} = ${3:1}; $2 <= ${4:finish}; $2++) {$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"'for' loop with non-zero start\\\"\\n  },\\n  \\\"for main() args\\\": {\\n    \\\"prefix\\\": \\\"forp\\\",\\n    \\\"body\\\": [\\\"for (int ${2:i} = ${1:1}; $2 < argc; $2++) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"'for' loop variant for cmdline arguments\\\"\\n  },\\n  \\\"for reverse\\\": {\\n    \\\"prefix\\\": \\\"forr\\\",\\n    \\\"body\\\": [\\n      \\\"for (${1:size_t} ${2:i} = ${3:count}; $2 > ${4:0}; $2--) {$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Mostly used reverse 'for' loop\\\"\\n  },\\n  \\\"for reverse custom\\\": {\\n    \\\"prefix\\\": \\\"forr1\\\",\\n    \\\"body\\\": [\\n      \\\"for (${1:int} ${2:i} = ${3:start}; $2 >= ${4:finish}; $2--) {$0\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"More custom reverse 'for' loop\\\"\\n  },\\n  \\\"for custom\\\": {\\n    \\\"prefix\\\": \\\"forc\\\",\\n    \\\"body\\\": [\\\"for (${1:size_t} ${2:i} = ${3:initval}; $4; $2${5:++}) {$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Custom 'for' loop\\\"\\n  },\\n  \\\"Function declaration\\\": {\\n    \\\"prefix\\\": \\\"fund\\\",\\n    \\\"body\\\": [\\\"$4${2:void} ${1:fun}(${3:void});\\\"],\\n    \\\"description\\\": \\\"Declare a function\\\"\\n  },\\n  \\\"Function definition\\\": {\\n    \\\"prefix\\\": \\\"fun\\\",\\n    \\\"body\\\": [\\\"$4${2:void} ${1:fun}(${3:void})\\\", \\\"{$0\\\", \\\"}\\\"],\\n    \\\"description\\\": \\\"Define a function\\\"\\n  },\\n  \\\"Function with return var\\\": {\\n    \\\"prefix\\\": \\\"funv\\\",\\n    \\\"body\\\": [\\n      \\\"$4${2:int} ${1:func}(${3:void})\\\",\\n      \\\"{\\\",\\n      \\\"\\\\t$2 ${5:retval} = ${6:0};$0\\\",\\n      \\\"\\\\treturn $5;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Define a function that uses a variable for return\\\"\\n  },\\n  \\\"typedef\\\": {\\n    \\\"prefix\\\": \\\"td\\\",\\n    \\\"body\\\": [\\\"typedef ${1:void} ${2:Emptiness};\\\"],\\n    \\\"description\\\": \\\"'typedef' snippet\\\"\\n  },\\n  \\\"Complicated typedef\\\": {\\n    \\\"prefix\\\": \\\"tdd\\\",\\n    \\\"body\\\": [\\\"typedef $0;\\\"],\\n    \\\"description\\\": \\\"Declaration-like typedef for func-ptr,array,etc.\\\"\\n  },\\n  \\\"typedef struct\\\": {\\n    \\\"prefix\\\": \\\"tdst\\\",\\n    \\\"body\\\": [\\\"typedef struct $1 ${1:Box};\\\"],\\n    \\\"description\\\": \\\"Implicit struct typedef\\\"\\n  },\\n  \\\"typedef union\\\": {\\n    \\\"prefix\\\": \\\"tduo\\\",\\n    \\\"body\\\": [\\\"typedef union $1 ${1:Cell};\\\"],\\n    \\\"description\\\": \\\"Implicit union typedef\\\"\\n  },\\n  \\\"typedef enum\\\": {\\n    \\\"prefix\\\": \\\"tdenum\\\",\\n    \\\"body\\\": [\\\"typedef enum $1 ${1:Numbers};\\\"],\\n    \\\"description\\\": \\\"Implicit enum typedef\\\"\\n  },\\n  \\\"struct\\\": {\\n    \\\"prefix\\\": \\\"st\\\",\\n    \\\"body\\\": [\\\"struct ${1:MyStruct} {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"'struct' snippet\\\"\\n  },\\n  \\\"struct type\\\": {\\n    \\\"prefix\\\": \\\"stt\\\",\\n    \\\"body\\\": [\\\"typedef struct $1 ${1:Box};\\\", \\\"struct $1 {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Define a type with struct\\\"\\n  },\\n  \\\"union\\\": {\\n    \\\"prefix\\\": \\\"uo\\\",\\n    \\\"body\\\": [\\\"union ${1:MyUnion} {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"'union' snippet\\\"\\n  },\\n  \\\"union type\\\": {\\n    \\\"prefix\\\": \\\"uot\\\",\\n    \\\"body\\\": [\\\"typedef union $1 ${1:Cell};\\\", \\\"union $1 {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Define a type with union\\\"\\n  },\\n  \\\"enum constant\\\": {\\n    \\\"prefix\\\": \\\"enum\\\",\\n    \\\"body\\\": [\\\"enum $1{ $0 };\\\"],\\n    \\\"description\\\": \\\"Define a constant with enum\\\"\\n  },\\n  \\\"enum\\\": {\\n    \\\"prefix\\\": \\\"enums\\\",\\n    \\\"body\\\": [\\\"enum ${1:MyEnum} {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"'enum' struct-like snippet\\\"\\n  },\\n  \\\"enum type\\\": {\\n    \\\"prefix\\\": \\\"enumt\\\",\\n    \\\"body\\\": [\\\"typedef enum $1 ${1:Numbers};\\\", \\\"enum $1 {$0\\\", \\\"};\\\"],\\n    \\\"description\\\": \\\"Define a type with enum\\\"\\n  },\\n  \\\"printf\\\": {\\n    \\\"prefix\\\": \\\"pri\\\",\\n    \\\"body\\\": [\\\"printf(\\\\\\\"${1:%s}\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"printf() snippet\\\"\\n  },\\n  \\\"fprintf\\\": {\\n    \\\"prefix\\\": \\\"fpri\\\",\\n    \\\"body\\\": [\\\"fprintf(${1:stderr}, \\\\\\\"${2:%s}\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"fprintf() snippet\\\"\\n  },\\n  \\\"sprintf\\\": {\\n    \\\"prefix\\\": \\\"spri\\\",\\n    \\\"body\\\": [\\\"sprintf(${1:buf}, \\\\\\\"${2:%s}\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"sprintf() snippet\\\"\\n  },\\n  \\\"snprintf\\\": {\\n    \\\"prefix\\\": \\\"snpri\\\",\\n    \\\"body\\\": [\\\"sprintf(${1:buf}, ${2:max}, \\\\\\\"${3:%s}\\\\\\\\n\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"snprintf() snippet\\\"\\n  },\\n  \\\"scanf\\\": {\\n    \\\"prefix\\\": \\\"scanf\\\",\\n    \\\"body\\\": [\\\"scanf(\\\\\\\"${1:%i}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"scanf() snippet\\\"\\n  },\\n  \\\"fscanf\\\": {\\n    \\\"prefix\\\": \\\"fscanf\\\",\\n    \\\"body\\\": [\\\"fscanf(${1:stdin}, \\\\\\\"${2:%i}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"fscanf() snippet\\\"\\n  },\\n  \\\"sscanf\\\": {\\n    \\\"prefix\\\": \\\"sscanf\\\",\\n    \\\"body\\\": [\\\"sscanf(${1:buf}, \\\\\\\"${2:%i}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"sscanf() snippet\\\"\\n  },\\n  \\\"Print a variable\\\": {\\n    \\\"prefix\\\": \\\"priv\\\",\\n    \\\"body\\\": [\\\"printf(\\\\\\\"$0 = %${1:i}\\\\\\\\n\\\\\\\", $0);\\\"],\\n    \\\"description\\\": \\\"Call printf() to log value of a variable\\\"\\n  },\\n  \\\"warn\\\": {\\n    \\\"prefix\\\": \\\"warn\\\",\\n    \\\"body\\\": [\\\"warn(\\\\\\\"${1:%s}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"warn() snippet\\\"\\n  },\\n  \\\"warnx\\\": {\\n    \\\"prefix\\\": \\\"warnx\\\",\\n    \\\"body\\\": [\\\"warnx(\\\\\\\"${1:%s}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"warnx() snippet\\\"\\n  },\\n  \\\"err\\\": {\\n    \\\"prefix\\\": \\\"err\\\",\\n    \\\"body\\\": [\\\"err(\\\\\\\"${1:%s}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"err() snippet\\\"\\n  },\\n  \\\"errx\\\": {\\n    \\\"prefix\\\": \\\"errx\\\",\\n    \\\"body\\\": [\\\"errx(\\\\\\\"${1:%s}\\\\\\\"$0);\\\"],\\n    \\\"description\\\": \\\"errx() snippet\\\"\\n  },\\n  \\\"assert\\\": {\\n    \\\"prefix\\\": \\\"asr\\\",\\n    \\\"body\\\": [\\\"assert($0);\\\"],\\n    \\\"description\\\": \\\"assert() snippet\\\"\\n  },\\n  \\\"static_assert\\\": {\\n    \\\"prefix\\\": \\\"stasr\\\",\\n    \\\"body\\\": [\\\"static_assert($0, \\\\\\\"${1:Oopsie!}\\\\\\\");\\\"],\\n    \\\"description\\\": \\\"static_assert() snippet\\\"\\n  },\\n  \\\"static_assert 1-param\\\": {\\n    \\\"prefix\\\": \\\"stasr1\\\",\\n    \\\"body\\\": [\\\"static_assert($0);\\\"],\\n    \\\"description\\\": \\\"C2X 1-parameter static_assert() snippet\\\"\\n  },\\n  \\\"malloc\\\": {\\n    \\\"prefix\\\": \\\"mlc\\\",\\n    \\\"body\\\": [\\\"${3:ptr} = malloc(sizeof(${1:int}[${2:1}])$0);\\\"],\\n    \\\"description\\\": \\\"malloc() snippet\\\"\\n  },\\n  \\\"calloc\\\": {\\n    \\\"prefix\\\": \\\"clc\\\",\\n    \\\"body\\\": [\\\"${3:ptr} = calloc(${2:1}, sizeof(${1:int})$0);\\\"],\\n    \\\"description\\\": \\\"calloc() snippet\\\"\\n  },\\n  \\\"realloc\\\": {\\n    \\\"prefix\\\": \\\"rlc\\\",\\n    \\\"body\\\": [\\\"${1:ptr} = realloc($1, sizeof(${2:int}[${3:1}])$0);\\\"],\\n    \\\"description\\\": \\\"realloc() snippet\\\"\\n  },\\n  \\\"free\\\": {\\n    \\\"prefix\\\": \\\"fre\\\",\\n    \\\"body\\\": [\\\"free(${1:ptr});\\\"],\\n    \\\"description\\\": \\\"free() snippet\\\"\\n  },\\n  \\\"malloc declaration\\\": {\\n    \\\"prefix\\\": \\\"mlcd\\\",\\n    \\\"body\\\": [\\\"${1:int} *${3:ptr} = malloc(sizeof($1[${2:1}])$0);\\\"],\\n    \\\"description\\\": \\\"malloc() declaration snippet\\\"\\n  },\\n  \\\"calloc declaration\\\": {\\n    \\\"prefix\\\": \\\"clcd\\\",\\n    \\\"body\\\": [\\\"${1:int} *${3:ptr} = calloc(${2:1}, sizeof($1)$0);\\\"],\\n    \\\"description\\\": \\\"calloc() declaration snippet\\\"\\n  },\\n  \\\"malloc template\\\": {\\n    \\\"prefix\\\": \\\"mlct\\\",\\n    \\\"body\\\": [\\n      \\\"${1:int} *${3:ptr} = malloc(sizeof($1[${2:1}]));\\\",\\n      \\\"if (!$3) {\\\",\\n      \\\"\\\\tfprintf(stderr, \\\\\\\"${4:Your memory is doomed!}\\\\\\\\n\\\\\\\"$5);\\\",\\n      \\\"\\\\t${6:exit(EXIT_FAILURE)};\\\",\\n      \\\"}\\\",\\n      \\\"$0\\\",\\n      \\\"\\\",\\n      \\\"free($3);\\\"\\n    ],\\n    \\\"description\\\": \\\"Use malloc() with fail option, then free().\\\"\\n  },\\n  \\\"calloc template\\\": {\\n    \\\"prefix\\\": \\\"clct\\\",\\n    \\\"body\\\": [\\n      \\\"${1:int} *${3:ptr} = calloc(${2:1}, sizeof($1));\\\",\\n      \\\"if (!$3) {\\\",\\n      \\\"\\\\tfprintf(stderr, \\\\\\\"${4:Your memory is doomed!}\\\\\\\\n\\\\\\\"$5);\\\",\\n      \\\"\\\\t${6:exit(EXIT_FAILURE)};\\\",\\n      \\\"}\\\",\\n      \\\"$0\\\",\\n      \\\"\\\",\\n      \\\"free($3);\\\"\\n    ],\\n    \\\"description\\\": \\\"Use calloc() with fail option, then free().\\\"\\n  },\\n  \\\"Comment block\\\": {\\n    \\\"prefix\\\": \\\",\\\",\\n    \\\"body\\\": [\\\"/*$0 */\\\"],\\n    \\\"description\\\": \\\"Convenient comment block\\\"\\n  },\\n  \\\"Multiline comment\\\": {\\n    \\\"prefix\\\": \\\",,\\\",\\n    \\\"body\\\": [\\\"/*$0\\\", \\\" */\\\"],\\n    \\\"description\\\": \\\"Convenient multiline comment\\\"\\n  },\\n  \\\"Multiline 2-star comment\\\": {\\n    \\\"prefix\\\": \\\",d\\\",\\n    \\\"body\\\": [\\\"/**$0\\\", \\\" **/\\\"],\\n    \\\"description\\\": \\\"Doxygen 2-star-style comment\\\"\\n  },\\n  \\\"Doxygen template\\\": {\\n    \\\"prefix\\\": \\\"dox\\\",\\n    \\\"body\\\": [\\n      \\\"/*!$1\\\",\\n      \\\" * @brief ${2:This is something undocumented.}\\\",\\n      \\\" *\\\",\\n      \\\" * ${3:Nothing to add here...}$0\\\",\\n      \\\" */\\\"\\n    ],\\n    \\\"description\\\": \\\"Doxygen template to document a var/func/etc\\\"\\n  },\\n  \\\"Doxygen function\\\": {\\n    \\\"prefix\\\": \\\"dfun\\\",\\n    \\\"body\\\": [\\n      \\\"/*!\\\",\\n      \\\" * @brief ${4:This function is undocumented.}\\\",\\n      \\\" *\\\",\\n      \\\" * ${5:Nothing to add here...}\\\",\\n      \\\" *\\\",\\n      \\\" * @return ${6:Umm...}$0\\\",\\n      \\\" */\\\",\\n      \\\"${2:void} ${1:fun}(${3:void});\\\"\\n    ],\\n    \\\"description\\\": \\\"Document a function with Doxygen\\\"\\n  },\\n  \\\"Todo section\\\": {\\n    \\\"prefix\\\": \\\"todo\\\",\\n    \\\"body\\\": [\\n      \\\"/*! TODO: ${1:I forgor...}\\\",\\n      \\\" *\\\",\\n      \\\" * @todo ${2:Cure my dementia.}\\\",\\n      \\\" */\\\"\\n    ],\\n    \\\"description\\\": \\\"Doxygen 'todo' section\\\"\\n  },\\n  \\\"Group section\\\": {\\n    \\\"prefix\\\": \\\"dgr\\\",\\n    \\\"body\\\": [\\n      \\\"/*! @name ${1:Useless API.}${2: No more details...}\\\",\\n      \\\" * @{\\\",\\n      \\\" */\\\",\\n      \\\"$0\\\",\\n      \\\"\\\",\\n      \\\"/*! @}\\\",\\n      \\\" */\\\"\\n    ],\\n    \\\"description\\\": \\\"Group documented elements\\\"\\n  },\\n  \\\"Array length\\\": {\\n    \\\"prefix\\\": \\\"alen\\\",\\n    \\\"body\\\": [\\\"(sizeof ${1:arr} / sizeof $1[0])\\\"],\\n    \\\"description\\\": \\\"Calculate number of elements in an array\\\"\\n  },\\n  \\\"Linked list\\\": {\\n    \\\"prefix\\\": \\\"clist\\\",\\n    \\\"body\\\": [\\n      \\\"typedef struct $1 ${1:Node};\\\",\\n      \\\"struct $1 {$0\\\",\\n      \\\"\\\\t$1 *${2:next};\\\",\\n      \\\"};\\\"\\n    ],\\n    \\\"description\\\": \\\"Create a linked list template\\\"\\n  }\\n}\\n\",\"sql.json\":\"{\\n  \\\"createt\\\": {\\n    \\\"prefix\\\": \\\"createt\\\",\\n    \\\"body\\\": [\\\"CREATE TABLE ${1:tableName} (\\\", \\\"\\\\t${2:attribute(s)}\\\", \\\");\\\"],\\n    \\\"description\\\": \\\"Create regular table\\\"\\n  },\\n  \\\"createti\\\": {\\n    \\\"prefix\\\": \\\"createti\\\",\\n    \\\"body\\\": [\\n      \\\"CREATE TABLE IF NOT EXISTS ${1:tableName} (\\\",\\n      \\\"\\\\t${2:attribute(s)}\\\",\\n      \\\");\\\"\\n    ],\\n    \\\"description\\\": \\\"Create table with conditional\\\"\\n  },\\n  \\\"created\\\": {\\n    \\\"prefix\\\": \\\"created\\\",\\n    \\\"body\\\": [\\\"CREATE DATABASE ${1:name};\\\"],\\n    \\\"description\\\": \\\"Create regular table\\\"\\n  },\\n  \\\"createdi\\\": {\\n    \\\"prefix\\\": \\\"createdi\\\",\\n    \\\"body\\\": [\\\"CREATE DATABASE IF NOT EXISTS ${1:name};\\\"],\\n    \\\"description\\\": \\\"Create table with conditional\\\"\\n  },\\n  \\\"insert\\\": {\\n    \\\"prefix\\\": \\\"insert\\\",\\n    \\\"body\\\": [\\n      \\\"INSERT INTO ${1:tableName} (\\\",\\n      \\\"\\\\t${2:attribute(s)}\\\",\\n      \\\") VALUES ( ${3:values} )\\\"\\n    ],\\n    \\\"description\\\": \\\"Insert value(s)\\\"\\n  },\\n  \\\"dropt\\\": {\\n    \\\"prefix\\\": \\\"dropt\\\",\\n    \\\"body\\\": [\\\"DROP TABLE ${1:tableName};\\\"],\\n    \\\"description\\\": \\\"Drop table\\\"\\n  },\\n  \\\"dropd\\\": {\\n    \\\"prefix\\\": \\\"dropd\\\",\\n    \\\"body\\\": [\\\"DROP DATABASE ${1:dbName};\\\"],\\n    \\\"description\\\": \\\"Drop database\\\"\\n  },\\n  \\\"dropti\\\": {\\n    \\\"prefix\\\": \\\"dropti\\\",\\n    \\\"body\\\": [\\\"DROP TABLE IF EXISTS ${1:tableName};\\\"],\\n    \\\"description\\\": \\\"Drop table with conditional\\\"\\n  },\\n  \\\"dropdi\\\": {\\n    \\\"prefix\\\": \\\"dropdi\\\",\\n    \\\"body\\\": [\\\"DROP DATABASE IF EXISTS ${1:dbName};\\\"],\\n    \\\"description\\\": \\\"Drop database with conditional\\\"\\n  },\\n  \\\"showt\\\": {\\n    \\\"prefix\\\": \\\"showt\\\",\\n    \\\"body\\\": [\\\"SHOW TABLES;\\\"],\\n    \\\"description\\\": \\\"Show tables\\\"\\n  },\\n  \\\"showd\\\": {\\n    \\\"prefix\\\": \\\"showd\\\",\\n    \\\"body\\\": [\\\"SHOW DATABASES;\\\"],\\n    \\\"description\\\": \\\"Show databases\\\"\\n  },\\n  \\\"select\\\": {\\n    \\\"prefix\\\": \\\"select\\\",\\n    \\\"body\\\": [\\\"SELECT ${1:attribute(s)} FROM ${2:tableName};\\\"],\\n    \\\"description\\\": \\\"Regular select\\\"\\n  },\\n  \\\"selectd\\\": {\\n    \\\"prefix\\\": \\\"selectd\\\",\\n    \\\"body\\\": [\\\"SELECT DISTINCT ${1:attribute(s)}\\\", \\\"\\\\tFROM ${2:tableName};\\\"],\\n    \\\"description\\\": \\\"Select Distinct\\\"\\n  },\\n  \\\"selectw\\\": {\\n    \\\"prefix\\\": \\\"selectw\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tWHERE ${3:condition};\\\"\\n    ],\\n    \\\"description\\\": \\\"Select with condition\\\"\\n  },\\n  \\\"selector\\\": {\\n    \\\"prefix\\\": \\\"selector\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tORDER BY ${3:attribute(s)} ${4:ASC|DESC};\\\"\\n    ],\\n    \\\"description\\\": \\\"Select with order\\\"\\n  },\\n  \\\"updatet\\\": {\\n    \\\"prefix\\\": \\\"updatet\\\",\\n    \\\"body\\\": [\\n      \\\"UPDATE ${1:tableName}\\\",\\n      \\\"\\\\tSET ${2:attribute(s)}\\\",\\n      \\\"\\\\tWHERE ${3:condition};\\\"\\n    ],\\n    \\\"description\\\": \\\"Update table\\\"\\n  },\\n  \\\"delete\\\": {\\n    \\\"prefix\\\": \\\"delete\\\",\\n    \\\"body\\\": [\\\"DELETE FROM ${1:tableName}\\\", \\\"\\\\tWHERE ${3:condition};\\\"],\\n    \\\"description\\\": \\\"Delete records\\\"\\n  },\\n  \\\"altert\\\": {\\n    \\\"prefix\\\": \\\"altert\\\",\\n    \\\"body\\\": [\\\"ALTER TABLE ${1:tableName}\\\", \\\"\\\\t ${2:intructions};\\\"],\\n    \\\"description\\\": \\\"Alter table\\\"\\n  },\\n  \\\"alterad\\\": {\\n    \\\"prefix\\\": \\\"alterad\\\",\\n    \\\"body\\\": [\\\"ALTER TABLE ${1:tableName}\\\", \\\"\\\\tADD COLUMN ${2:col_name};\\\"],\\n    \\\"description\\\": \\\"Alter table - Add column\\\"\\n  },\\n  \\\"alteraf\\\": {\\n    \\\"prefix\\\": \\\"alteraf\\\",\\n    \\\"body\\\": [\\n      \\\"ALTER TABLE ${1:tableName}\\\",\\n      \\\"\\\\tADD COLUMN ${2:col_name}\\\",\\n      \\\"\\\\tAFTER ${5:col_name};\\\"\\n    ],\\n    \\\"description\\\": \\\"Alter table - Add column after\\\"\\n  },\\n  \\\"alterdb\\\": {\\n    \\\"prefix\\\": \\\"alterdb\\\",\\n    \\\"body\\\": [\\n      \\\"ALTER DATABASE ${1:dbName}\\\",\\n      \\\"\\\\tCHARACTER SET ${2:charset}\\\",\\n      \\\"\\\\tCOLLATE ${3:utf8_unicode_ci};\\\"\\n    ],\\n    \\\"description\\\": \\\"Alter database\\\"\\n  },\\n  \\\"ijoin\\\": {\\n    \\\"prefix\\\": \\\"ijoin\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tINNER JOIN ${3:tableName2}\\\",\\n      \\\"\\\\tON ${4:match};\\\"\\n    ],\\n    \\\"description\\\": \\\"Inner Join\\\"\\n  },\\n  \\\"rjoin\\\": {\\n    \\\"prefix\\\": \\\"rjoin\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tRIGHT JOIN ${3:tableName2}\\\",\\n      \\\"\\\\tON ${4:match};\\\"\\n    ],\\n    \\\"description\\\": \\\"Right Join\\\"\\n  },\\n  \\\"ljoin\\\": {\\n    \\\"prefix\\\": \\\"ljoin\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tLEFT JOIN ${3:tableName2}\\\",\\n      \\\"\\\\tON ${4:match};\\\"\\n    ],\\n    \\\"description\\\": \\\"Left Join\\\"\\n  },\\n  \\\"fjoin\\\": {\\n    \\\"prefix\\\": \\\"fjoin\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tFULL JOIN OUTER ${3:tableName2}\\\",\\n      \\\"\\\\tON ${4:match}\\\",\\n      \\\"\\\\tWHERE ${5:condition};\\\"\\n    ],\\n    \\\"description\\\": \\\"Full Join\\\"\\n  },\\n  \\\"union\\\": {\\n    \\\"prefix\\\": \\\"union\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)} FROM ${2:tableName}\\\",\\n      \\\"UNION\\\",\\n      \\\"SELECT ${3:attribute(s)} FROM ${4:tableName2};\\\"\\n    ],\\n    \\\"description\\\": \\\"Regular union\\\"\\n  },\\n  \\\"uniona\\\": {\\n    \\\"prefix\\\": \\\"uniona\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)} FROM ${2:tableName}\\\",\\n      \\\"UNION ALL\\\",\\n      \\\"SELECT ${3:attribute(s)} FROM ${4:tableName2};\\\"\\n    ],\\n    \\\"description\\\": \\\"All union\\\"\\n  },\\n  \\\"groupb\\\": {\\n    \\\"prefix\\\": \\\"groupb\\\",\\n    \\\"body\\\": [\\n      \\\"SELECT ${1:attribute(s)}\\\",\\n      \\\"\\\\tFROM ${2:tableName}\\\",\\n      \\\"\\\\tGROUP BY ${3:attribute(s)};\\\"\\n    ],\\n    \\\"description\\\": \\\"Group by\\\"\\n  },\\n  \\\"bakupd\\\": {\\n    \\\"prefix\\\": \\\"bakupd\\\",\\n    \\\"body\\\": [\\\"BACKUP DATABASE ${1:dbName}\\\", \\\"\\\\tTO DISK ${2:filepath};\\\"],\\n    \\\"description\\\": \\\"Backup database\\\"\\n  },\\n  \\\"bakupdw\\\": {\\n    \\\"prefix\\\": \\\"bakupdw\\\",\\n    \\\"body\\\": [\\n      \\\"BACKUP DATABASE ${1:dbName}\\\",\\n      \\\"\\\\tTO DISK ${2:filepath}\\\",\\n      \\\"\\\\tWITH ${3:DIFERENTIAL};\\\"\\n    ],\\n    \\\"description\\\": \\\"Diferencial backup database\\\"\\n  },\\n  \\\"primaryk\\\": {\\n    \\\"prefix\\\": \\\"primaryk\\\",\\n    \\\"body\\\": [\\\"PRIMARY KEY(${1:attribute})\\\"],\\n    \\\"description\\\": \\\"Primary Key\\\"\\n  },\\n  \\\"primarykc\\\": {\\n    \\\"prefix\\\": \\\"primarykc\\\",\\n    \\\"body\\\": [\\\"CONSTRAINT ${1:attribute} PRIMARY KEY(${2:attribute(s)})\\\"],\\n    \\\"description\\\": \\\"Constraint rimary Key\\\"\\n  },\\n  \\\"foreingk\\\": {\\n    \\\"prefix\\\": \\\"foreingk\\\",\\n    \\\"body\\\": [\\n      \\\"FOREIGN KEY(${1:attribute}) REFERENCES ${2:tableName}(${3:attribute})\\\"\\n    ],\\n    \\\"description\\\": \\\"Foreing Key\\\"\\n  },\\n  \\\"foreingkc\\\": {\\n    \\\"prefix\\\": \\\"foreingkc\\\",\\n    \\\"body\\\": [\\n      \\\"CONSTRAINT ${1:attribute} FOREIGN KEY (${2:attribute(s)})\\\",\\n      \\\"\\\\tREFERENCES ${3:tableName}(${4:attribute})\\\"\\n    ],\\n    \\\"description\\\": \\\"Constraint foreing Key\\\"\\n  },\\n  \\\"check\\\": {\\n    \\\"prefix\\\": \\\"check\\\",\\n    \\\"body\\\": [\\\"CHECK ( ${1:condition} )\\\"],\\n    \\\"description\\\": \\\"Check\\\"\\n  },\\n  \\\"creteuser\\\": {\\n    \\\"prefix\\\": \\\"createuser\\\",\\n    \\\"body\\\": \\\"CREATE USER '${1:username}'@'${2:localhost}' IDENTIFIED BY '${3:password}';\\\",\\n    \\\"description\\\": \\\"Create User\\\"\\n  },\\n  \\\"deleteuser\\\": {\\n    \\\"prefix\\\": \\\"deleteuser\\\",\\n    \\\"body\\\": \\\"DELETE FROM mysql.user WHERE user = '${1:userName}';\\\",\\n    \\\"description\\\": \\\"Delete user\\\"\\n  },\\n  \\\"grantuser\\\": {\\n    \\\"prefix\\\": \\\"grantuser\\\",\\n    \\\"body\\\": \\\"GRANT ALL PRIVILEGES ON ${1:db}.${2:tb} TO '${3:user_name}'@'${4:localhost}';\\\",\\n    \\\"description\\\": \\\"Grant privileges\\\"\\n  }\\n}\\n\",\"rust.json\":\"\",\"markdown.json\":\"{\\n  // Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n  // same ids are connected.\\n  // Example:\\n  // \\\"Print to console\\\": {\\n  // \\t\\\"prefix\\\": \\\"log\\\",\\n  // \\t\\\"body\\\": [\\n  // \\t\\t\\\"console.log('$1');\\\",\\n  // \\t\\t\\\"$2\\\"\\n  // \\t],\\n  // \\t\\\"description\\\": \\\"Log output to console\\\"\\n  // }\\n\\n  \\\"directive\\\": {\\n    \\\"prefix\\\": \\\">>\\\",\\n    \\\"body\\\": [\\\"<!--$1-->$2\\\"],\\n    \\\"description\\\": \\\"Directive\\\"\\n  }\\n}\\n\"}"}}