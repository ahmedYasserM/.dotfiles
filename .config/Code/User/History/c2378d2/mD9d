#______________________________________________________#

# History in cache directory:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.cache/zsh/.histfile
EDITOR=lvim
VISUAL=lvim

#______________________________________________________

# environment variables 


export PATH=/home/ahmed/.local/bin:/home/ahmed/.cargo/bin:$PATH
export PATH=:/home/ahmed/.surrealdb:$PATH
#export PATH=/home/ahmed/.local/share/rtx/installs/node/20.2.0/bin:$PATH
#export PATH=/home/ahmed/downloads/tars/zig-linux-x86_64-0.10.1:$PATH
#export PATH=/usr/lib/jvm/jdk-20/bin:$PATH
export PATH=/usr/local/go/bin:$PATH

set JAVA_HOME="/usr/lib/jvm/jdk-20"


#______________________________________________________

# tree symbols
alias tsym="echo ├ ─ │ └" 

# deno
alias dd="deno run --check" 

# obsidian
alias obs="cp -r ~/templates/.obsidian .; cp -r ~/templates/.obsidian.vimrc ." 

# vim
alias svim=" sudo vim"

# aliases
alias sk=" sioyek"

# surreal db
alias sur="surreal" 

# ranger
alias r="ranger"

# bash
alias o="bash open ."

# rust and cargo
alias cr="cargo run"
alias cn="cargo new"

# sioyek pdf
alias sk="sioyek & disown"

# docker
alias docker="sudo docker "
# make
alias m="make -s "

# nodejs
alias n="node . "

# python
alias rp="python3 main.py "

alias tok="cat ~/data/token "

# git
alias gpu="git push"
alias gpl="git pull"
alias gf="git fetch"
alias gc="git commit"
alias gm="git merge"
alias ga="git add"

alias ..="z .. "

alias rf="rm -rf "

alias dr="dotnet run "
alias dn="dotnet new "

#alias vim=  lvim 

alias ctp="cp /home/ahmed/Templates/c-temp "
alias cptp="cp /home/ahmed/Templates/cpp-temp "

alias l='ls -1'
alias ls='ls --color=auto'
alias ll="ls -l "
alias lla="ls -la "
alias grep="grep --color= auto "
alias cat="bat "
alias c="clear "
alias manim="python -m manimlib --uhd -w -c black --video_dir ~/code/manim 	"
alias t="tldr "
alias pl="pdflatex "
alias ip="ip -c "
 
#______________________________________________________

bindkey -v
#______________________________________________________

PROMPT=''

if [[ $PWD == *"/home/ahmed"* ]]; then
PROMPT+='🏡 🚀 '
else
PROMPT=''
PROMPT+='%F{blue}%1/%F{green} 🏡 '
fi

# ❯
# 
# ⚓
# λ
# 🏡
# 🚀
#______________________________________________________

autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)

#______________________________________________________


function ranger-cd {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map q chain shell echo %d > "$tempfile"; quitall"
    )
    
    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}


 bindkey -s '^o' 'ranger-cd\n'
#______________________________________________________



# plugins
source ~/repos/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/repos/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

#______________________________________________________


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#

/opt/anaconda3/bin/conda config --set auto_activate_base false

__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup


# <<< conda initialize <<<


# -----------------------------------> ZOXIDE <---------------------------------  
#
# =============================================================================
#
# Utility functions for zoxide.
#

# pwd based on the value of _ZO_RESOLVE_SYMLINKS.
function __zoxide_pwd() {
    \builtin pwd -L
}

# cd + custom logic based on the value of _ZO_ECHO.
function __zoxide_cd() {
    # shellcheck disable=SC2164
    \builtin cd -- "$@"
}

# =============================================================================
#
# Hook configuration for zoxide.
#

# Hook to add new entries to the database.
function __zoxide_hook() {
    # shellcheck disable=SC2312
    \command zoxide add -- "$(__zoxide_pwd)"
}

# Initialize hook.
# shellcheck disable=SC2154
if [[ ${precmd_functions[(Ie)__zoxide_hook]:-} -eq 0 ]] && [[ ${chpwd_functions[(Ie)__zoxide_hook]:-} -eq 0 ]]; then
    chpwd_functions+=(__zoxide_hook)
fi

# =============================================================================
#
# When using zoxide with --no-cmd, alias these internal functions as desired.
#

__zoxide_z_prefix='z#'

# Jump to a directory using only keywords.
function __zoxide_z() {
    # shellcheck disable=SC2199
    if [[ "$#" -eq 0 ]]; then
        __zoxide_cd ~
    elif [[ "$#" -eq 1 ]] && { [[ -d "$1" ]] || [[ "$1" = '-' ]] || [[ "$1" =~ ^[-+][0-9]$ ]]; }; then
        __zoxide_cd "$1"
    elif [[ "$@[-1]" == "${__zoxide_z_prefix}"?* ]]; then
        # shellcheck disable=SC2124
        \builtin local result="${@[-1]}"
        __zoxide_cd "${result:${#__zoxide_z_prefix}}"
    else
        \builtin local result
        # shellcheck disable=SC2312
        result="$(\command zoxide query --exclude "$(__zoxide_pwd)" -- "$@")" &&
            __zoxide_cd "${result}"
    fi
}

# Jump to a directory using interactive search.
function __zoxide_zi() {
    \builtin local result
    result="$(\command zoxide query --interactive -- "$@")" && __zoxide_cd "${result}"
}

# Completions.
if [[ -o zle ]]; then
    function __zoxide_z_complete() {
        # Only show completions when the cursor is at the end of the line.
        # shellcheck disable=SC2154
        [[ "${#words[@]}" -eq "${CURRENT}" ]] || return 0

        if [[ "${#words[@]}" -eq 2 ]]; then
            _files -/
        elif [[ "${words[-1]}" == '' ]] && [[ "${words[-2]}" != "${__zoxide_z_prefix}"?* ]]; then
            \builtin local result
            # shellcheck disable=SC2086,SC2312
            if result="$(\command zoxide query --exclude "$(__zoxide_pwd)" --interactive -- ${words[2,-1]})"; then
                result="${__zoxide_z_prefix}${result}"
                # shellcheck disable=SC2296
                compadd -Q "${(q-)result}"
            fi
            \builtin printf '\e[5n'
        fi
        return 0
    }

    \builtin bindkey '\e[0n' 'reset-prompt'
    [[ "${+functions[compdef]}" -ne 0 ]] && \compdef __zoxide_z_complete __zoxide_z
fi

# =============================================================================
#
# Commands for zoxide. Disable these using --no-cmd.
#

\builtin alias z=__zoxide_z
\builtin alias zi=__zoxide_zi

# =============================================================================
#
# To initialize zoxide, add this to your configuration (usually ~/.zshrc):
#
# eval "$(zoxide init zsh)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
